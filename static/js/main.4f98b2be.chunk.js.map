{"version":3,"sources":["apis/imageApi.tsx","images/brain.png","images sync /^/.//.*$","images/clusterization.png","images/correlation.png","images/data-preprocessing-cover.png","images/distributions.png","images/regression.png","authContext.tsx","data_operations.tsx","globals.tsx","components/header.tsx","components/operationComponent.tsx","pages/home.tsx","components/headerCentral.tsx","pages/login.tsx","components/unloginButton.tsx","data_history.tsx","components/operationHistoryComponent.tsx","components/tableHistory.tsx","pages/profile.tsx","components/footer.tsx","components/methodPanel.tsx","components/imagePlace.tsx","pages/regression.tsx","apis/taskApi.tsx","components/stringInput.tsx","components/stringOutput.tsx","pages/distribution.tsx","pages/dataPreprocessing.tsx","components/checkBox.tsx","components/numberInput.tsx","pages/clusterization.tsx","components/matrixComponent.tsx","components/matrix.tsx","pages/correlation.tsx","app.tsx","index.tsx"],"names":["getImage","resultHandler","imageName","Axios","get","responseType","then","response","base64ImageString","Buffer","from","data","toString","catch","error","alert","message","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","authContext","createContext","operations","Header","link","React","useContext","authenticated","className","to","src","logo","width","alt","OperationComponent","props","page_link","require","img_name","default","href","name","description","type","Home","operationsComponents","op","Fragment","HeaderCentral","Login","navigate","useNavigate","useState","email","setEmail","password","setPassword","isPressed","setPressed","auth_context","method","required","onChange","evt","target","value","onClick","event","preventDefault","setAuthenticated","console","log","HandleMouseEvent","UnLoginButton","operationsHistory","OperationHistoryComponent","scope","operation_name","input_file_name","output_file_name","TableHistory","operationsHistoryComponents","input_file_id","output_file_id","Profile","Footer","MethodPanel","htmlFor","onSend","ImagePlace","image","Regression","image_name","names","regerssionData","selectedFile","setSelectedFile","setImage","useEffect","undefined","files","postToTask","path","formData","parameters","post","params","headers","oldData","status","postCorrelation","colormap","StringInput","mainLabel","fieldName","placeholder","defaultValue","onChangeHandle","tipLabel","tipLabelLink","StringOutput","disabled","Distribution","distribution_type","distributionData","setDistributionData","columnName","setColumnName","inputColumnName","FormData","append","column_name","postDistribution","DataPreprocessing","CheckBox","text","NumberInput","input","min","max","Clusterization","withCenters","setWithCenters","clustersNumber","setClustersNumber","clusters_centers","clusters_labels","columns_names","clusterizationData","setClusterizationData","inputClusterNumber","clustersCenterCheckBox","wc","clustersCenters","center","v","index","toFixed","push","clusters_num","postClusterization","length","MatrixComponent","values","columnClass","size","Math","floor","Matrix","i","slice","matrixClass","Correlation","correlationData","setCorrelationData","colorMap","setColorMap","handleSubmit","inputColormap","App","Provider","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4f98b2be.chunk.js","sourcesContent":["import Axios, {AxiosError} from 'axios';\n\nconst imageBasePath:string = 'http://localhost:8080/images';\n\nexport function getImage(resultHandler: (data: any)=>void, imageName: string){\n\n    Axios.get(`${imageBasePath}/${imageName}`,\n        { responseType: 'arraybuffer' }\n    ).then\n    (response => {\n        let base64ImageString: string = Buffer.from(response.data, 'binary').toString('base64');\n        resultHandler(\"data:image/png;base64,\" + base64ImageString);\n    })\n    .catch((error: AxiosError) => {\n        alert(error.message);\n    });\n\n}","export default __webpack_public_path__ + \"static/media/brain.6c1dae5a.png\";","var map = {\n\t\"./brain.png\": 26,\n\t\"./clusterization.png\": 66,\n\t\"./correlation.png\": 67,\n\t\"./data-preprocessing-cover.png\": 68,\n\t\"./distributions.png\": 69,\n\t\"./regression.png\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 65;","export default __webpack_public_path__ + \"static/media/clusterization.86ce360e.png\";","export default __webpack_public_path__ + \"static/media/correlation.b4dd3955.png\";","export default __webpack_public_path__ + \"static/media/data-preprocessing-cover.dc0dad88.png\";","export default __webpack_public_path__ + \"static/media/distributions.bcca2403.png\";","export default __webpack_public_path__ + \"static/media/regression.cfe9699e.png\";","import { createContext } from \"react\";\n\nexport interface AuthContext{\n  authenticated: boolean,\n  setAuthenticated (auth: boolean): void\n}\n\nconst authContext = createContext<AuthContext| null>(null);\n\nexport default authContext;","import Operation from './operation';\n\nlet operations: Operation[] = [\n    {'id': 1,'page_link':'distribution', 'img_name': 'distributions.png','name': 'Распределение данных', 'description': 'Позволяет посмотреть на частотные распределения ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B2%D0%B5%D1%80%D0%BE%D1%8F%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9'},\n    {'id': 2, 'page_link':'regression','img_name': 'regression.png','name': 'Регрессия', 'description': 'Позволяет построить различные регрессии по вашим данным.', 'link':'https://ru.wikipedia.org/wiki/%D0%A0%D0%B5%D0%B3%D1%80%D0%B5%D1%81%D1%81%D0%B8%D1%8F_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)'},\n    {'id': 3, 'page_link':'data-preprocessing','img_name': 'data-preprocessing-cover.png','name': 'Предварительная обработка данных', 'description': 'Позволяет провести предварительную обработку ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85'},\n    {'id': 4, 'page_link':'clusterization','img_name': 'clusterization.png','name': 'Кластеризация', 'description': 'Позволяет выделить кластеры в ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9A%D0%BB%D0%B0%D1%81%D1%82%D0%B5%D1%80%D0%BD%D1%8B%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7'},\n    {'id': 5, 'page_link':'correlation','img_name': 'correlation.png','name': 'Корреляция', 'description': 'Позволяет посмотреть на корреляцию ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D1%80%D0%B5%D0%BB%D1%8F%D1%86%D0%B8%D1%8F'},\n]\n\nexport default operations;","export function main_page_link(){\n    return '/';\n}\n\nexport function site_name(){\n    return 'Cloud Machine Learning';\n}\n\nvar isLogin_: boolean = false;\n\nexport function isLogin(){\n    return isLogin_;\n}\n\nexport function setLogin(isLogin: boolean){\n    isLogin_ = isLogin;\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {main_page_link, site_name, isLogin, setLogin};\n","import React from \"react\";\nimport \"../css/header.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../images/brain.png';\nimport { main_page_link, site_name} from '../globals';\nimport { Link } from \"react-router-dom\";\nimport authContext from \"../authContext\";\n\nfunction Header (){\n    const isLogin = React.useContext(authContext);\n    let link: string = '/login';\n    if (isLogin!.authenticated) {\n        link = '/profile';\n    }\n    return (\n        <header>\n            <nav>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                        <div className=\"navbar-brand left ms-0 row\">\n                            <Link to={main_page_link()} className=\"col-md-4 col-lg-4\">\n                                <div className=\"logo\">\n                                    <img className=\"logo-image\"src={logo} width = {120} alt=\"logo\" />\n                                </div>\n                            </Link>\n                            <Link className=\"nav-link col-md-8 col-lg-8 logo-link\" to={main_page_link()}> {site_name()} </Link>\n                        </div>\n                        <div className=\"navbar-brand right me-0\">\n                            <Link className=\"nav-link\" to={link}> Профиль </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\n\nexport default Header;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Operation from '../operation';\nimport '../css/button_default.css';\nimport '../css/operation_component.css';\nimport { Link } from 'react-router-dom';\n\nfunction OperationComponent(props: Operation){\n    return (\n        <div className=\"col-md-6 col-lg-4 mb-3\">\n            <div className=\"product\">\n                <div>\n                    <div className=\"mb-3\">\n                        <Link  to={props.page_link}>\n                            <img src={require(`../images/${props.img_name}`).default} alt='Пример' />\n                        </Link>\n                    </div>\n                    <div className=\"product-title\">\n                        <a className=\"nav-link\" href={props.link}>\n                            <b>{props.name}</b>\n                        </a>\n                    </div>\n                    <br />\n                    <div>{props.description}</div>\n                </div>\n                <br />\n                <div className=\"mt-auto\">\n                    <Link className=\"btn button-default btn-try\" to={props.page_link} type=\"button\">Опробовать</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OperationComponent;","import React from 'react';\nimport '../css/home.css';\nimport operations from '../data_operations';\nimport Header from '../components/header';\nimport OperationComponent from '../components/operationComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Home() {\n    let operationsComponents: JSX.Element[] = operations.map(op => \n        <OperationComponent \n        key={op.id} \n        id={op.id} \n        img_name={op.img_name} \n        name={op.name} \n        description={op.description} \n        link={op.link}\n        page_link={op.page_link} \n    />);\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <section className=\"products-list row\">\n                    {operationsComponents}\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport \"../css/header_central.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../images/brain.png';\nimport {main_page_link, site_name} from '../globals';\nimport { Link } from \"react-router-dom\";\n\nfunction HeaderCentral(){\n    return (\n        <header>\n            <nav>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                    <div className=\"navbar-brand row\">\n                            <Link to={main_page_link()} className=\"col-md-4 col-lg-4\">\n                                <div className=\"logo\">\n                                    <img className=\"logo-image\"src={logo} width = {150} alt=\"logo\" />\n                                </div>\n                            </Link>\n                            <Link className=\"nav-link col-md-8 col-lg-8 logo-link\" to={main_page_link()}> {site_name()} </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\n\nexport default HeaderCentral;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/login.css';\nimport HeaderCentral from \"../components/headerCentral\";\nimport { useNavigate, NavigateFunction } from \"react-router-dom\";\nimport authContext from \"../authContext\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Login() {\n    const navigate:NavigateFunction = useNavigate();\n    const [email, setEmail] = React.useState<string>('');\n    const [password, setPassword] = React.useState<string>('');\n    const [isPressed, setPressed] =  React.useState<boolean>(false);\n    const auth_context = React.useContext(authContext);\n\n    function HandleMouseEvent(event: any){\n        event.preventDefault()\n        setPressed(true)\n        if(email !== '' && password !== ''){\n            navigate('/profile')\n            auth_context!.setAuthenticated(true);\n            console.log( auth_context!.authenticated);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n                <section className=\"login-form mb-3\">\n                    <div className=\"title\">\n                        <h1>Авторизация</h1>\n                    </div>\n                    <form className=\"mt-4\" method=\"post\">\n                        <div className=\"mb-4\">\n                            <div><label>Email</label></div>\n                            <div><input type=\"email\" className=\"w-100\" name=\"email\" required onChange={evt => setEmail(evt.target.value)} /></div>\n                            {(isPressed && email === '') && <div className=\"errors\">Заполните \"Email\"</div>}\n                        </div>\n                        <div className=\"mb-4\">\n                            <div><label>Пароль</label></div>\n                            <div><input type=\"password\" className=\"w-100\" name=\"password\" required onChange={evt => setPassword(evt.target.value)} /></div>\n                            {(isPressed && password === '') && <div className=\"errors\">Заполните \"Пароль\"</div>}\n                        </div>\n                        <div className=\"mb-4\">\n                            <button type=\"submit\" onClick={(event)=>HandleMouseEvent(event)} className=\"btn button-default btn-login\">Войти</button>\n                        </div>\n                    </form>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\n\n\nexport default  Login;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/unlogin.css';\nimport { useNavigate, NavigateFunction } from \"react-router-dom\";\nimport authContext from \"../authContext\";\n\nfunction UnLoginButton() {\n    const navigate:NavigateFunction = useNavigate();\n    const auth_context = React.useContext(authContext);\n\n    function HandleMouseEvent(){\n        navigate('/login');\n        auth_context!.setAuthenticated(false);\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-6 col-lg-4 mb-4\">\n                <button type=\"submit\" onClick = {() =>HandleMouseEvent()} className=\"btn button-default btn-unlogin\">Выйти</button>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default  UnLoginButton;","import OperationHistory from './operationHistory';\n\nlet operationsHistory: OperationHistory[] = [\n    {'id':1, 'operation_name': 'Построение регрессии','input_file_name':'input.csv','output_file_name':'output.png','input_file_id': 1, 'output_file_id': 2},\n    {'id':2, 'operation_name': 'Подготовка данных','input_file_name':'input.csv','output_file_name':'output.csv','input_file_id': 2, 'output_file_id': 3},\n    {'id':3, 'operation_name': 'Распределение данных','input_file_name':'input.csv','output_file_name':'output.png','input_file_id': 4, 'output_file_id': 5}\n\n]\n\nexport default operationsHistory;","import OperationHistory from \"../operationHistory\";\n\nfunction OperationHistoryComponent(props: OperationHistory){\n    return (\n    <tr>\n        <th scope=\"row\">{props.id}</th>\n        <td>{props.operation_name}</td>\n        <td>{props.input_file_name}</td>\n        <td>{props.output_file_name}</td>\n    </tr>\n    )\n}\n\nexport default OperationHistoryComponent;","import \"../css/table.css\";\nimport operationsHistory from \"../data_history\";\nimport OperationHistoryComponent from \"./operationHistoryComponent\";\n\nfunction TableHistory(){\n\n    let operationsHistoryComponents: JSX.Element[] = operationsHistory.map(value => \n        <OperationHistoryComponent \n        key={value.id} \n        id={value.id} \n        operation_name={value.operation_name} \n        input_file_name={value.input_file_name} \n        output_file_name={value.output_file_name} \n        input_file_id={value.input_file_id} \n        output_file_id={value.output_file_id}  \n    />);\n\n    return (\n        <table className=\"table table-striped mb-3 col-md-8 col-lg-12\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Действие</th>\n                    <th scope=\"col\">Исходные данные</th>\n                    <th scope=\"col\">Результат</th>\n                </tr>\n            </thead>\n            <tbody>\n                {operationsHistoryComponents}\n            </tbody>\n        </table>\n    );\n}\n\nexport default TableHistory;","import React from \"react\";\nimport '../css/profile.css';\nimport HeaderCentral from \"../components/headerCentral\";\nimport UnLoginButton from \"../components/unloginButton\";\nimport TableHistory from \"../components/tableHistory\";\n\nfunction Profile() {\n\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n            <section className=\"profile-list\">\n                <div>\n                    <div className=\"profile-title mb-3\">\n                        Это ваш профиль\n                    </div>\n                </div>\n                <UnLoginButton />\n            </section>\n                <div>\n                    <div className=\"profile-title mb-3\">\n                        История действий\n                    </div>\n                    <TableHistory />\n                </div>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Profile;","import \"../css/footer.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"mt-auto\">\n            <div className=\"container\">\n                <div>\n                    &copy; V31R, 2022\n                    </div>\n                <div>\n                    <a className=\"link\" href=\"https://github.com/V31R\">GitHub</a>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\n\nexport default Footer;","import React from 'react';\nimport '../css/methodPanel.css';\nimport '../css/button_default.css';\n\nfunction MethodPanel(props: any){\n    return (\n        <React.Fragment>\n            <div className=\"load-send row\">\n                <form className=\"file-form col-md-12 col-lg-8 mb-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlFile1\">Загрузите <b>.csv</b> файл с вашими данными</label>\n                        <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\" onChange={evt=>props.onChange(evt)}/>\n                    </div>\n                </form>\n                <button type=\"submit\" onClick={evt=>props.onSend(evt)}className=\"btn button-default btn-send col-md-12 col-lg-4 ms-auto me-auto\">Выполнить</button>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default MethodPanel;","import React from 'react';\nimport \"../css/result_default.css\";\nimport '../css/imagePlace.css';\n\nexport function ImagePlace(props: any) {\n    return (\n        <React.Fragment>\n            <div className=\"image-result result-default\">\n                {props.image !== null && <img className=\"img-result\" src={props.image} alt=\"ImageResult\"/>}\n                {props.image == null && <div className=\"img-replacement\"> Здесь будет изображение</div>}\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default ImagePlace;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/regression.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport { getImage } from '../apis/imageApi';\nimport ImagePlace from '../components/imagePlace';\n\ninterface RegressionData {\n    image_name: string,\n    names: string[]\n}\n\nfunction Regression() {\n    // eslint-disable-next-line\n    const [regerssionData, setRegressionData] = React.useState<RegressionData>({ image_name: \"\", names: [] });\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    React.useEffect(() => {\n        if (regerssionData!.image_name === \"\") {\n            return;\n        }\n        console.log(regerssionData)\n        getImage(setImage, regerssionData!.image_name);\n    },\n        [regerssionData]\n    );\n    const handleSubmit = (event: any) => {\n        console.log(selectedFile)\n    }\n\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Регрессия</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Regression;","import Axios, { AxiosError } from \"axios\";\n\nconst correlationPath: string = 'http://localhost:8080/correlation';\nconst clusterizationPath: string = 'http://localhost:8080/clusterization';\nconst distributionPath: string = 'http://localhost:8080/distribution';\n\nfunction postToTask(path: string, resultHandler: (data: any) => void, formData: FormData, parameters: Object){\n    Axios.post(path,\n        formData,\n        { \n            params: { ...parameters }, \n            headers: { \"Content-Type\": \"multipart/form-data\" }, responseType: \"json\" \n        }\n    ).then\n    (response => {\n        resultHandler((oldData: Object) => ({ ...oldData, ...response.data }));\n    })\n    .catch((error: AxiosError) => {\n        alert(`${error.response!.status} ${error.response!.data}.`);\n    });\n}\n\nexport function postCorrelation(resultHandler: (data: any) => void, formData: FormData, colormap: string | null) {\n    postToTask(correlationPath, resultHandler, formData, { colormap: colormap } )\n}\n\n\nexport function postClusterization(resultHandler: (data: any) => void, formData: FormData, clustersNumber: number, withCenters: boolean) {\n    postToTask(clusterizationPath, resultHandler, formData, \n        { \n            clusters_num: clustersNumber, \n            clusters_centers:withCenters \n        } )\n}\n\nexport function postDistribution(resultHandler: (data: any) => void, formData: FormData, columnName: string | null) {\n    postToTask(distributionPath, resultHandler, formData, { column_name: columnName } )\n}\n","import React from 'react';\nimport '../css/inputElementStyle.css';\nimport InputData from '../inputData';\n\nfunction StringInput(props: InputData) {\n\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div><input type=\"text\" className=\"w-100 input-window\"  name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/></div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip' htmlFor={props.fieldName}>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip' htmlFor={props.fieldName}>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default StringInput;","import React from 'react';\nimport '../css/inputElementStyle.css';\nimport OutputData from '../outputData';\n\nfunction StringOutput(props: OutputData) {\n\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div>\n                    { props.value === null && <input type=\"text\" className=\"w-100 input-window\" placeholder={props.defaultValue} disabled/> }\n                    { props.value !== null &&<input type=\"text\" className=\"w-100 input-window\" value={props.value} disabled/>}\n                </div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip'>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip'>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default StringOutput;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/distribution.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport { getImage } from '../apis/imageApi';\nimport ImagePlace from '../components/imagePlace';\nimport { postDistribution } from '../apis/taskApi';\nimport InputData from '../inputData';\nimport StringInput from '../components/stringInput';\nimport OutputData from '../outputData';\nimport StringOutput from '../components/stringOutput';\n\ninterface DistributionData {\n    image_name: string,\n    name: string | null,\n    distribution_type: string | null\n}\n\nfunction Distribution() {\n    // eslint-disable-next-line\n    const [distributionData, setDistributionData] = React.useState<DistributionData>({ image_name: \"\", name: null , distribution_type: null});\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [columnName, setColumnName] = React.useState<string | null>(null);\n    React.useEffect(() => {\n        if (distributionData!.image_name === \"\") {\n                return;\n        }\n        console.log(distributionData)\n        getImage( setImage, distributionData!.image_name);\n    },\n        [distributionData]\n    );\n    const handleSubmit=(event: any) =>{\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        postDistribution(setDistributionData, formData, columnName);\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleColumnName = (event: any) => {\n        setColumnName(event.target.value)\n    }\n\n    const inputColumnName: InputData = {\n        mainLabel: 'Введите имя столбца',\n        fieldName: 'column_name',\n        defaultValue: '',\n        tipLabel: 'Если данные содержат больше одного числового столбца будет распределение будет составляться по введённому столбцу',\n        onChangeHandle: handleColumnName\n    };\n\n    let outputColumnName: OutputData ={\n        mainLabel: 'Имя столбца',\n        defaultValue: 'Здесь будет имя столбца, по которому было распределение',\n        tipLabel: 'Без заданного имени столбца берётся первый числовой столбец',\n        value: null\n    }\n\n    let outputDistributionType: OutputData ={\n        mainLabel: 'Тип распределения',\n        defaultValue: 'Здесь будет тип самого подходящего распределения',\n        value: null\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Распределение</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <StringInput {...inputColumnName} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <StringOutput {...outputColumnName} {...{value: distributionData.name}} />\n                            <StringOutput {...outputDistributionType} {...{value: distributionData.distribution_type}} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Distribution;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/dataPreprocessing.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\n\n\nfunction DataPreprocessing() {\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n\n    const handleSubmit=(event: any) =>{\n        console.log(selectedFile)\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Предварительная обработка данных</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default DataPreprocessing;","import React from 'react';\nimport '../css/checkBox.css';\n\nexport interface CheckBoxData{\n    name: string;\n    onChangeHandle: any;\n    text: string;\n}\n\nexport function CheckBox(props: CheckBoxData) {\n    return (\n        <React.Fragment>\n            <div>\n                <label className=\"checkbox-box\">\n                    <div><input className=\"checkbox\" type=\"checkbox\" name={props.name} onChange={evt => props.onChangeHandle(evt)} /></div>\n                    <div className=\"checkbox-label\">{props.text}</div>\n                </label>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default CheckBox;","import React from 'react';\nimport '../css/inputElementStyle.css';\nimport InputData from '../inputData';\n\nfunction NumberInput(props: InputData) {\n    let input: JSX.Element =<input type=\"number\" className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    if(props.min !== undefined && props.max === undefined){\n        input = <input type=\"number\" min={props.min} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }else if(props.min === undefined && props.max !== undefined){\n        input = <input type=\"number\" max={props.max} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }else if(props.min !== undefined && props.max !== undefined){\n        input = <input type=\"number\" max={props.max} min={props.min} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div>\n                    {input}\n                </div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip' htmlFor={props.fieldName}>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip' htmlFor={props.fieldName}>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default NumberInput;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/clusterization.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport CheckBox, {CheckBoxData} from '../components/checkBox';\nimport ImagePlace from '../components/imagePlace';\nimport NumberInput from '../components/numberInput';\nimport InputData from '../inputData';\nimport StringOutput from '../components/stringOutput';\nimport OutputData from '../outputData';\nimport { getImage } from '../apis/imageApi';\nimport { postClusterization } from '../apis/taskApi';\n\ninterface ClusterizationData{\n    image_name: string,\n    clusters_centers: any | null,\n    clusters_labels: number[] | null,\n    columns_names: string[] | null\n}\n\nfunction Clusterization() {\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [withCenters, setWithCenters] = React.useState<boolean>(false);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [clustersNumber, setClustersNumber] = React.useState<number>(1);\n    const [clusterizationData, setClusterizationData] = React.useState<ClusterizationData>({\n        image_name: \"\", \n        clusters_centers: null, \n        clusters_labels:null, \n        columns_names:null\n    });\n\n    React.useEffect(() => {\n        if (clusterizationData!.image_name === \"\") {\n            return;\n        }\n        getImage( setImage, clusterizationData!.image_name);\n    },\n        [clusterizationData]\n    );\n\n    const handleSubmit=(event: any) =>{\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n        if(clustersNumber <= 0){\n            alert('Количество кластеров должно быть >=1');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        postClusterization(setClusterizationData, formData, clustersNumber, withCenters);\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleCenterCheckBox = (event: any) => {\n        event.preventDefault()\n        setWithCenters(wc=>!wc);\n    }\n\n    const handleClusterNumber = (event: any) => {\n        setClustersNumber(event.target.value);\n    }\n\n    const inputClusterNumber: InputData = {\n        mainLabel: 'Введите количество кластеров',\n        fieldName: 'clusters_num',\n        defaultValue: '1',\n        min: \"1\",\n        onChangeHandle: handleClusterNumber\n    };\n\n    let clustersCenterCheckBox: CheckBoxData = {\n        name:\"clusters_center\", \n        text:\"Рисовать центры кластеров\", \n        onChangeHandle:handleCenterCheckBox\n    };\n\n    let outputColumnsName: OutputData ={\n        mainLabel: 'Имена столбцов',\n        defaultValue: 'Здесь будут имена столбцов участвовавших в кластеризации',\n        tipLabel: 'Столбцы, которые не являются числовыми, игнорируются',\n        value: null\n    }\n\n    let outputClusters: OutputData ={\n        mainLabel: 'Кластеры',\n        defaultValue: 'Здесь будет массив кластеров',\n        tipLabel: 'Элемент массива - индекс кластера, к которому принадлежит элемент',\n        value: null\n    }\n\n    let outputClustersCenters: OutputData ={\n        mainLabel: 'Центры кластеров',\n        defaultValue: 'Здесь будут центры кластеров',\n        value: null\n    }\n\n    let clustersCenters: JSX.Element[] = [];\n    for(let center in clusterizationData.clusters_centers){\n        let v: string = \"\";\n        for(let index in clusterizationData.clusters_centers[center]){\n            v+=clusterizationData.clusters_centers[center][index].toFixed(4) + \" \"\n        }\n        clustersCenters.push(\n        <StringOutput {...{\n            mainLabel:`Центр кластерa ${center}`,\n            value: v,\n            defaultValue: '',\n        }}/>)\n    }\n\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Кластеризация</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <NumberInput {...inputClusterNumber} />\n                            <CheckBox {...clustersCenterCheckBox} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <StringOutput {...outputColumnsName} {...{value: clusterizationData.columns_names}} />\n                            <StringOutput {...outputClusters} {...{value: clusterizationData.clusters_labels}} />\n                            {clustersCenters.length === 0 && <StringOutput {...outputClustersCenters} {...{value: clusterizationData.clusters_centers}} />}\n                            {clustersCenters.length > 0 && clustersCenters }\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Clusterization;","import \"../css/matrix.css\";\n\nfunction MatrixComponent(props: any){\n    let values: JSX.Element[] = props.values.map((value: number)=><div className='matrix-cell'><div className='text'>{value}</div></div>);\n    let columnClass: string=\"matrix-column mt-1 \";\n    let value: number=2;\n    if(12/props.size > 2){\n        value=Math.floor(12/props.size);\n    }\n    columnClass=columnClass+`col-sm-${value} col-md-${value} col-lg-${value}`\n    return (\n        <>\n            <div className={columnClass}>\n                {values}\n            </div>\n        </>\n    );\n}\n\nexport default MatrixComponent;","import \"../css/matrix.css\";\nimport \"../css/result_default.css\";\nimport MatrixComponent from \"./matrixComponent\";\n\nfunction Matrix(props: any){\n    let values: JSX.Element[] = [];\n    for(let i: number=0; i < props.names.length;i++){\n        values.push(<MatrixComponent key={i} size={props.names.length} values={props.values.slice(i*props.names.length, (i+1)*props.names.length).map((value:number)=>value.toFixed(3))}/>)\n    }\n    let matrixClass='matrix-result result-default mt-1';\n    if(props.names.length === 0){\n        matrixClass+=' matrix-result-height';\n    }\n    return (\n        <div className = {matrixClass}>\n            {props.names.length > 0 &&\n                <div className=\"matrix row\">\n                    {values}\n                </div>\n            }\n            {props.names.length === 0 &&\n             <div className=\"matrix-replacement\"> Здесь будет матрица</div>\n            }\n        </div>\n    );\n}\n\nexport default Matrix;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/correlation.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport ImagePlace from '../components/imagePlace';\nimport Matrix from '../components/matrix';\nimport StringInput from '../components/stringInput';\nimport InputData from '../inputData';\nimport { getImage } from '../apis/imageApi';\nimport { postCorrelation } from '../apis/taskApi';\n\ninterface CorrelationData {\n    image_name: string,\n    names: string[],\n    values: number[]\n}\n\nfunction Correlation() {\n    const [correlationData, setCorrelationData] = React.useState<CorrelationData>({ image_name: \"\", names: [], values: [] });\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [colorMap, setColorMap] = React.useState<string | null>(null);\n    React.useEffect(() => {\n        if (correlationData!.image_name === \"\") {\n                return;\n        }\n        console.log(correlationData)\n        getImage( setImage, correlationData!.image_name);\n    },\n        [correlationData]\n    );\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        postCorrelation(setCorrelationData, formData, colorMap);\n\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleColorMap = (event: any) => {\n        setColorMap(event.target.value)\n    }\n\n    const inputColormap: InputData = {\n        mainLabel: 'Введите название colormap',\n        fieldName: 'color_map',\n        defaultValue: '',\n        tipLabel: 'Допустимые colormap',\n        tipLabelLink: 'https://matplotlib.org/stable/tutorials/colors/colormaps.html',\n        onChangeHandle: handleColorMap\n    };\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Корреляция</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <StringInput {...inputColormap} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <Matrix names={correlationData.names} values={correlationData.values} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Correlation;","import React from 'react';\nimport './css/App.css';\nimport { Routes, Route } from \"react-router-dom\";\nimport AuthContext from './authContext'\nimport Home from \"./pages/home\";\nimport Login from './pages/login';\nimport Profile from './pages/profile';\nimport Footer from './components/footer';\n\nimport Regression from './pages/regression';\nimport Distribution from './pages/distribution';\nimport DataPreprocessing from './pages/dataPreprocessing';\nimport Clusterization from './pages/clusterization';\nimport Correlation from './pages/correlation';\n\n\nfunction App() {\n\n  const [authenticated, setAuthenticated] = React.useState<boolean>(false);\n\n  return (\n      <AuthContext.Provider value={{ authenticated, setAuthenticated }}>\n        \n        <Routes>\n          <Route path=\"/\" element={ <Home /> } />\n          <Route path=\"/profile\" element={ <Profile /> } />\n          <Route path=\"/login\" element={ <Login /> } />\n          <Route path=\"/regression\" element={ <Regression />} />\n          <Route path=\"/distribution\" element={ <Distribution /> } />\n          <Route path=\"/data-preprocessing\" element={ <DataPreprocessing />} />\n          <Route path=\"/clusterization\" element={ <Clusterization/>} />\n          <Route path=\"/correlation\" element={ <Correlation /> }/>\n        </Routes>\n        <Footer />\n      </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport './css/index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}