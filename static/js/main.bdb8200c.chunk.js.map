{"version":3,"sources":["apis/authApi.tsx","apis/fileApi.tsx","images/brain.png","images sync /^/.//.*$","images/clusterization.png","images/correlation.png","images/data-preprocessing-cover.png","images/distributions.png","images/regression.png","data_operations.tsx","components/header.tsx","globals.tsx","components/operationComponent.tsx","pages/home.tsx","components/headerCentral.tsx","pages/login.tsx","components/unloginButton.tsx","components/operationHistoryComponent.tsx","components/tableHistory.tsx","apis/historyApi.tsx","pages/profile.tsx","components/footer.tsx","components/methodPanel.tsx","components/imagePlace.tsx","components/stringOutput.tsx","components/stringInput.tsx","apis/taskApi.tsx","components/numberInput.tsx","pages/regression.tsx","pages/distribution.tsx","pages/dataPreprocessing.tsx","components/checkBox.tsx","pages/clusterization.tsx","components/matrixComponent.tsx","components/matrix.tsx","pages/correlation.tsx","pages/registration.tsx","app.tsx","index.tsx"],"names":["authenticationBasePath","getAuth","resultHandler","errorHandler","login","password","Axios","get","auth","username","responseType","then","response","console","log","oldData","data","catch","error","message","postAuth","post","getRefresh","token","localStorage","getItem","headers","setItem","fileBasePath","getImage","imageName","getFile","get_image_from_blob","filename","status","alert","blob","arrayBuffer","res","base64ImageString","Buffer","from","toString","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","operations","Header","link","className","to","src","logo","width","alt","OperationComponent","props","page_link","require","img_name","default","href","name","description","type","Home","operationsComponents","op","Fragment","HeaderCentral","Login","navigate","useNavigate","React","useState","setLogin","setPassword","isPressed","setPressed","refresh_token","user","setUser","setError","useEffect","method","required","onChange","evt","event","preventDefault","target","value","trim","onClick","handleSubmit","UnLoginButton","OperationHistoryComponent","scope","operation_name","input_file_id","sessionStorage","input_file_name","output_file_id","output_file_name","TableHistory","operationsHistoryComponents","historyPath","getHistory","Profile","setOperations","get_history","history","Footer","MethodPanel","htmlFor","onSend","ImagePlace","image","StringOutput","mainLabel","placeholder","defaultValue","disabled","undefined","tipLabel","tipLabelLink","StringInput","fieldName","onChangeHandle","postToTask","path","formData","parameters","params","postCorrelation","colormap","postClusterization","clustersNumber","withCenters","clusters_num","clusters_centers","postDistribution","columnName","column_name","postRegression","polynomialOrder","columnNameX","columnNameY","order","column_x","column_y","postPreprocessing","NumberInput","input","min","max","Regression","image_name","name_x","name_y","regerssionData","setRegressionData","selectedFile","setSelectedFile","setImage","setColumnNameX","setColumnNameY","setPolynomialOrder","get_image","FormData","append","result","handleColumnName","inputPolynomialOrder","inputColumnNameX","inputColumnNameY","files","Distribution","distribution_type","distributionData","setDistributionData","setColumnName","inputColumnName","DataPreprocessing","setFilename","csvUrl","setCsvUrl","Blob","window","URL","createObjectURL","download","CheckBox","text","Clusterization","setWithCenters","setClustersNumber","clusters_labels","columns_names","clusterizationData","setClusterizationData","inputClusterNumber","clustersCenterCheckBox","wc","clustersCenters","center","v","index","toFixed","push","length","MatrixComponent","values","columnClass","size","Math","floor","Matrix","i","names","slice","matrixClass","Correlation","correlationData","setCorrelationData","colorMap","setColorMap","inputColormap","Registration","passwordCopy","setPasswordCopy","handlePassword","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bdb8200c.chunk.js","sourcesContent":["import Axios, {AxiosError} from 'axios';\nimport { User } from '../models/user';\n\nconst authenticationBasePath:string = 'http://localhost:8080/authentication';\nconst refreshBasePath:string = 'http://localhost:8080/refresh';\n\nexport function getAuth(resultHandler: (data: any)=>void, errorHandler: (data: any)=>void, login: string, password: string){\n\n    Axios.get(authenticationBasePath,\n        {\n            auth: {\n                username: login,\n                password: password\n            },\n            responseType: 'json' \n        }\n    ).then\n    (response => {\n        console.log(response);\n        resultHandler((oldData: Object) => ({ ...oldData, ...response.data }));\n    })\n    .catch((error: AxiosError) => {\n        errorHandler(error.message);\n    });\n\n}\n\nexport function postAuth(resultHandler: (data: any)=>void, errorHandler: (data: any)=>void, login: string, password: string){\n\n    Axios.post(authenticationBasePath,\n        null,\n        {\n            auth: {\n                username: login,\n                password: password\n            }, \n            responseType: 'json' \n        }\n    ).then\n    (response => {\n        resultHandler((oldData: Object) => ({ ...oldData, ...response.data }));\n    })\n    .catch((error: AxiosError) => {\n        errorHandler(error.message);\n    });\n\n}\n\n\nexport function getRefresh(){\n    const token = localStorage.getItem('refresh_token')\n    return Axios.get(refreshBasePath,\n        {\n            headers: { 'Authorization': ''+ token},\n            responseType: 'json' \n        }\n    ).then\n    (response => {\n        const data: User = response.data;\n        localStorage.setItem('token', data.token);\n        return true;\n    })\n    .catch((error: AxiosError) => {\n        localStorage.setItem('token', '');\n        localStorage.setItem('refresh_token', '');\n        return null;\n    });\n\n}","import Axios, { AxiosError } from 'axios';\nimport { getRefresh } from './authApi';\n\nexport const fileBasePath: string = 'http://localhost:8080/files';\n\nexport async function getImage(imageName: string) {\n    const data: Blob | null| true = await getFile(imageName)\n    if(data === true){\n        return await get_image_from_blob(await getFile(imageName));\n    }else if(data == null){\n        return null\n    }else{\n        return await get_image_from_blob(data);\n    }\n}\n\nexport async function getFile(filename: string) {\n    const token = localStorage.getItem('token')\n    return Axios.get(`${fileBasePath}/${filename}`,\n        {\n            headers: { 'Authorization': ''+ token},\n            responseType: 'blob'\n        }\n    ).then\n        (response => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            if(error.response!.status === 401){\n                return getRefresh();\n            }\n            alert(error.message);\n        });\n\n}\n\nexport async function get_image_from_blob(blob: Blob){\n    const res = await blob.arrayBuffer()\n    const base64ImageString: string = Buffer.from(res).toString('base64');\n    return \"data:image/png;base64,\" + base64ImageString;\n}","export default __webpack_public_path__ + \"static/media/brain.6c1dae5a.png\";","var map = {\n\t\"./brain.png\": 29,\n\t\"./clusterization.png\": 67,\n\t\"./correlation.png\": 68,\n\t\"./data-preprocessing-cover.png\": 69,\n\t\"./distributions.png\": 70,\n\t\"./regression.png\": 71\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66;","export default __webpack_public_path__ + \"static/media/clusterization.86ce360e.png\";","export default __webpack_public_path__ + \"static/media/correlation.b4dd3955.png\";","export default __webpack_public_path__ + \"static/media/data-preprocessing-cover.dc0dad88.png\";","export default __webpack_public_path__ + \"static/media/distributions.bcca2403.png\";","export default __webpack_public_path__ + \"static/media/regression.cfe9699e.png\";","import Operation from './models/operation';\n\nlet operations: Operation[] = [\n    {'id': 1,'page_link':'distribution', 'img_name': 'distributions.png','name': 'Распределение данных', 'description': 'Позволяет посмотреть на частотные распределения ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B2%D0%B5%D1%80%D0%BE%D1%8F%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9'},\n    {'id': 2, 'page_link':'regression','img_name': 'regression.png','name': 'Регрессия', 'description': 'Позволяет построить различные регрессии по вашим данным.', 'link':'https://ru.wikipedia.org/wiki/%D0%A0%D0%B5%D0%B3%D1%80%D0%B5%D1%81%D1%81%D0%B8%D1%8F_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)'},\n    {'id': 3, 'page_link':'data-preprocessing','img_name': 'data-preprocessing-cover.png','name': 'Предварительная обработка данных', 'description': 'Позволяет провести предварительную обработку ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85'},\n    {'id': 4, 'page_link':'clusterization','img_name': 'clusterization.png','name': 'Кластеризация', 'description': 'Позволяет выделить кластеры в ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9A%D0%BB%D0%B0%D1%81%D1%82%D0%B5%D1%80%D0%BD%D1%8B%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7'},\n    {'id': 5, 'page_link':'correlation','img_name': 'correlation.png','name': 'Корреляция', 'description': 'Позволяет посмотреть на корреляцию ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D1%80%D0%B5%D0%BB%D1%8F%D1%86%D0%B8%D1%8F'},\n]\n\nexport default operations;","import React from \"react\";\nimport \"../css/header.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../images/brain.png';\nimport { main_page_link, site_name} from '../globals';\nimport { Link } from \"react-router-dom\";\n\nfunction Header (){\n    let link: string = '/login';\n    if (localStorage.getItem('token') !== '' && localStorage.getItem('token') !== null) {\n        link = '/profile';\n    }\n    return (\n        <header>\n            <nav>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                        <div className=\"navbar-brand left ms-0 row\">\n                            <Link to={main_page_link()} className=\"col-md-4 col-lg-4\">\n                                <div className=\"logo\">\n                                    <img className=\"logo-image\"src={logo} width = {120} alt=\"logo\" />\n                                </div>\n                            </Link>\n                            <Link className=\"nav-link col-md-8 col-lg-8 logo-link\" to={main_page_link()}> {site_name()} </Link>\n                        </div>\n                        <div className=\"navbar-brand right me-0\">\n                            <Link className=\"nav-link\" to={link}> Профиль </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\n\nexport default Header;","export function main_page_link(){\n    return '/';\n}\n\nexport function site_name(){\n    return 'Cloud Machine Learning';\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Operation from '../models/operation';\nimport '../css/button_default.css';\nimport '../css/operation_component.css';\nimport { Link } from 'react-router-dom';\n\nfunction OperationComponent(props: Operation){\n    return (\n        <div className=\"col-md-6 col-lg-4 mb-3\">\n            <div className=\"product\">\n                <div>\n                    <div className=\"mb-3\">\n                        <Link  to={props.page_link}>\n                            <img src={require(`../images/${props.img_name}`).default} alt='Пример' />\n                        </Link>\n                    </div>\n                    <div className=\"product-title\">\n                        <a className=\"nav-link\" href={props.link}>\n                            <b>{props.name}</b>\n                        </a>\n                    </div>\n                    <br />\n                    <div>{props.description}</div>\n                </div>\n                <br />\n                <div className=\"mt-auto\">\n                    <Link className=\"btn button-default btn-try\" to={props.page_link} type=\"button\">Опробовать</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OperationComponent;","import React from 'react';\nimport '../css/home.css';\nimport operations from '../data_operations';\nimport Header from '../components/header';\nimport OperationComponent from '../components/operationComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Home() {\n    let operationsComponents: JSX.Element[] = operations.map(op => \n        <OperationComponent \n        key={op.id} \n        id={op.id} \n        img_name={op.img_name} \n        name={op.name} \n        description={op.description} \n        link={op.link}\n        page_link={op.page_link} \n    />);\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <section className=\"products-list row\">\n                    {operationsComponents}\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport \"../css/header_central.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../images/brain.png';\nimport {main_page_link, site_name} from '../globals';\nimport { Link } from \"react-router-dom\";\n\nfunction HeaderCentral(){\n    return (\n        <header>\n            <nav>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                    <div className=\"navbar-brand row\">\n                            <Link to={main_page_link()} className=\"col-md-4 col-lg-4\">\n                                <div className=\"logo\">\n                                    <img className=\"logo-image\"src={logo} width = {150} alt=\"logo\" />\n                                </div>\n                            </Link>\n                            <Link className=\"nav-link col-md-8 col-lg-8 logo-link\" to={main_page_link()}> {site_name()} </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\n\nexport default HeaderCentral;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/login.css';\nimport HeaderCentral from \"../components/headerCentral\";\nimport { useNavigate, NavigateFunction, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { User } from \"../models/user\";\nimport { getAuth } from \"../apis/authApi\";\n\nfunction Login() {\n    const navigate: NavigateFunction = useNavigate();\n    const [login, setLogin] = React.useState<string>('');\n    const [password, setPassword] = React.useState<string>('');\n    const [isPressed, setPressed] = React.useState<boolean>(false);\n    const [user, setUser] = React.useState<User>({ token: '', refresh_token :''});\n    const [error, setError] = React.useState<string | null>(null);\n\n    React.useEffect(() => {\n        if(user.token === ''){\n            return;\n        }\n        localStorage.setItem('token', user.token);\n        localStorage.setItem('refresh_token', user.refresh_token);\n        navigate('/profile')\n    },\n    // eslint-disable-next-line\n        [user]\n    );\n\n\n    function handleSubmit(event: any) {\n        event.preventDefault()\n        setError(null)\n        setPressed(true)\n        if (login !== '' && password !== '') {\n            getAuth(setUser, setError, login, password)\n        }\n    };\n\n    function handleLogin(event: any) {\n        event.preventDefault()\n        setLogin(event.target.value.trim())\n    }\n\n    function handlePassword(event: any) {\n        event.preventDefault()\n        setPassword(event.target.value.trim())\n    }\n\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n                <section className=\"login-form mb-3\">\n                    <div className=\"title\">\n                        <h1>Авторизация</h1>\n                    </div>\n                    <form className=\"mt-4\" method=\"post\">\n                        <div className=\"mb-4\">\n                            <div><label>Логин</label></div>\n                            <div><input type=\"text\" className=\"w-100\" name=\"login\" required onChange={evt => handleLogin(evt)} /></div>\n                            {(isPressed && login === '') && <div className=\"errors\">Заполните \"Логин\"</div>}\n                        </div>\n                        <div className=\"mb-4\">\n                            <div><label>Пароль</label></div>\n                            <div><input type=\"password\" className=\"w-100\" name=\"password\" required onChange={evt => handlePassword(evt)} /></div>\n                            {(isPressed && password === '') && <div className=\"errors\">Заполните \"Пароль\"</div>}\n                        </div>\n                        {error !== null &&\n                            <div className=\"mb-2 reg-tip\">\n                                <div className=\"errors\">Неверный логин или пароль!</div>\n                            </div>\n                        }\n                        <div className=\"mb-2\">\n                            <button type=\"submit\" onClick={(event) => handleSubmit(event)} className=\"btn button-default btn-login\">Войти</button>\n                        </div>\n                        <div className=\"mb-2 reg-tip\">\n                            <Link className='reg-link' to='/registration'>Нет аккаунта? Зарегистрируйтесь!</Link>\n                        </div>\n                    </form>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\n\n\nexport default Login;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/unlogin.css';\nimport { useNavigate, NavigateFunction } from \"react-router-dom\";\n\nfunction UnLoginButton() {\n    const navigate:NavigateFunction = useNavigate();\n\n    function HandleMouseEvent(){\n        navigate('/login');\n        localStorage.setItem('token', '');\n        localStorage.setItem('refresh_token', '');\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-6 col-lg-4 mb-4\">\n                <button type=\"submit\" onClick = {() =>HandleMouseEvent()} className=\"btn button-default btn-unlogin\">Выйти</button>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default  UnLoginButton;","import OperationHistory from \"../models/operationHistory\";\nimport {fileBasePath} from \"../apis/fileApi\";\n\nfunction OperationHistoryComponent(props: OperationHistory){\n    return (\n    <tr>\n        <th scope=\"row\">{props.id}</th>\n        <td>{props.operation_name}</td>\n        <td><a className = \"history-link\" href={`${fileBasePath}/${props.input_file_id}?user=${sessionStorage.getItem('user')}`}>{props.input_file_name}</a></td>\n        <td><a className = \"history-link\" href={`${fileBasePath}/${props.output_file_id}?user=${sessionStorage.getItem('user')}`}>{props.output_file_name}</a></td>\n    </tr>\n    )\n}\n\nexport default OperationHistoryComponent;","import \"../css/table.css\";\n\nimport OperationHistory from \"../models/operationHistory\";\nimport OperationHistoryComponent from \"./operationHistoryComponent\";\ninterface Operations{\n    data: OperationHistory[]\n}\nfunction TableHistory(props: Operations){\n\n    let operationsHistoryComponents: JSX.Element[] = props.data.map(value => \n        <OperationHistoryComponent \n        key={value.id} \n        id={value.id} \n        operation_name={value.operation_name} \n        input_file_name={value.input_file_name} \n        output_file_name={value.output_file_name} \n        input_file_id={value.input_file_id} \n        output_file_id={value.output_file_id}  \n    />);\n\n    return (\n        <table className=\"table table-striped mb-3 col-md-8 col-lg-12\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Действие</th>\n                    <th scope=\"col\">Исходные данные</th>\n                    <th scope=\"col\">Результат</th>\n                </tr>\n            </thead>\n            <tbody>\n                {operationsHistoryComponents}\n            </tbody>\n        </table>\n    );\n}\n\nexport default TableHistory;","import Axios, { AxiosError } from \"axios\";\nimport { getRefresh } from \"./authApi\";\n\nconst historyPath: string = 'http://localhost:8080/history';\n\n\nexport async function getHistory() {\n    const token = localStorage.getItem('token')\n    return Axios.get(historyPath,\n        {\n            headers: { 'Authorization': ''+token},\n            responseType: \"json\"\n        }\n    ).then\n        (response => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            if(error.response!.status === 401){\n                return getRefresh();\n            }\n            alert(`${error.response!.status} ${error.response!.data}.`);\n            return null;\n        });\n}","import React from \"react\";\nimport '../css/profile.css';\nimport HeaderCentral from \"../components/headerCentral\";\nimport UnLoginButton from \"../components/unloginButton\";\nimport TableHistory from \"../components/tableHistory\";\nimport OperationHistory from \"../models/operationHistory\";\nimport { getHistory } from \"../apis/historyApi\";\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\n\nfunction Profile() {\n    const navigate: NavigateFunction = useNavigate();\n    const [operations, setOperations] = React.useState<OperationHistory[]>([]);\n    React.useEffect(() => {\n        \n        const get_history = async () => {\n            const history = await getHistory();\n            if(history === true){\n\n                get_history()\n\n            }else if(history === null){\n\n                navigate('/login');\n\n            }else{\n\n                setOperations(history);\n            }\n        }\n        get_history()\n    },\n    // eslint-disable-next-line\n        []\n    );\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n            <section className=\"profile-list\">\n                <div>\n                    <div className=\"profile-title mb-3\">\n                        Это ваш профиль\n                    </div>\n                </div>\n                <UnLoginButton />\n            </section>\n                <div>\n                    <div className=\"profile-title mb-3\">\n                        История действий\n                    </div>\n                    <TableHistory data = {operations}/>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Profile;","import \"../css/footer.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"mt-auto\">\n            <div className=\"container\">\n                <div>\n                    &copy; V31R, 2022\n                    </div>\n                <div>\n                    <a className=\"link\" href=\"https://github.com/V31R\">GitHub</a>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\n\nexport default Footer;","import React from 'react';\nimport '../css/methodPanel.css';\nimport '../css/button_default.css';\n\nfunction MethodPanel(props: any){\n    return (\n        <React.Fragment>\n            <div className=\"load-send row\">\n                <form className=\"file-form col-md-12 col-lg-8 mb-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlFile1\">Загрузите <b>.csv</b> файл с вашими данными</label>\n                        <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\" onChange={evt=>props.onChange(evt)}/>\n                    </div>\n                </form>\n                <button type=\"submit\" onClick={evt=>props.onSend(evt)}className=\"btn button-default btn-send col-md-12 col-lg-4 ms-auto me-auto\">Выполнить</button>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default MethodPanel;","import React from 'react';\nimport \"../css/result_default.css\";\nimport '../css/imagePlace.css';\n\nexport function ImagePlace(props: any) {\n    return (\n        <React.Fragment>\n            <div className=\"image-result result-default\">\n                {props.image !== null && <img className=\"img-result\" src={props.image} alt=\"ImageResult\"/>}\n                {props.image == null && <div className=\"img-replacement\"> Здесь будет изображение</div>}\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default ImagePlace;","import React from 'react';\nimport '../css/inputElementStyle.css';\nimport OutputData from '../models/outputData';\n\nfunction StringOutput(props: OutputData) {\n\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div>\n                    { props.value === null && <input type=\"text\" className=\"w-100 input-window\" placeholder={props.defaultValue} disabled/> }\n                    { props.value !== null &&<input type=\"text\" className=\"w-100 input-window\" value={props.value} disabled/>}\n                </div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip'>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip'>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default StringOutput;","import React from 'react';\nimport '../css/inputElementStyle.css';\nimport InputData from '../models/inputData';\n\nfunction StringInput(props: InputData) {\n\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div><input type=\"text\" className=\"w-100 input-window\"  name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/></div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip' htmlFor={props.fieldName}>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip' htmlFor={props.fieldName}>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default StringInput;","import Axios, { AxiosError } from \"axios\";\nimport { getRefresh } from \"./authApi\";\n\nconst correlationPath: string = 'http://localhost:8080/correlation';\nconst clusterizationPath: string = 'http://localhost:8080/clusterization';\nconst distributionPath: string = 'http://localhost:8080/distribution';\nconst regressionPath: string = 'http://localhost:8080/regression';\nconst preprocessingPath: string = 'http://localhost:8080/preprocessing';\n\nfunction postToTask(path: string, formData: FormData, parameters: Object) {\n    const token = localStorage.getItem('token')\n    return Axios.post(path,\n        formData,\n        {\n            params: { ...parameters },\n            headers: { \n                \"Content-Type\": \"multipart/form-data\",\n                'Authorization': ''+token\n            },\n            responseType: \"json\"\n        }\n    ).then\n        (response => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            if(error.response!.status === 401){\n                return getRefresh();\n            }\n            alert(`${error.response!.status} ${error.response!.data}.`);\n            return undefined;\n        });\n}\n\nexport function postCorrelation(formData: FormData, colormap: string | null) {\n    return postToTask(correlationPath, formData, { colormap: colormap })\n}\n\n\nexport function postClusterization( formData: FormData, clustersNumber: number, withCenters: boolean) {\n    return postToTask(clusterizationPath, formData,\n        {\n            clusters_num: clustersNumber,\n            clusters_centers: withCenters\n        })\n}\n\nexport function postDistribution(formData: FormData, columnName: string | null) {\n    return postToTask(distributionPath, formData, { column_name: columnName })\n}\n\n\nexport function postRegression(formData: FormData,  \n                        polynomialOrder: number, columnNameX: string | null, columnNameY: string | null) {\n    return postToTask(regressionPath,  formData,\n        {\n            order: polynomialOrder,\n            column_x: columnNameX,\n            column_y: columnNameY\n        })\n}\n\n\nexport function postPreprocessing(formData: FormData) {\n    const token = localStorage.getItem('token')\n    return Axios.post(preprocessingPath,\n        formData,\n        {\n            headers: { \n                \"Content-Type\": \"multipart/form-data\",\n                'Authorization': ''+token\n            },\n            responseType: \"blob\"\n        }\n    ).then\n        (response => {\n            return response.data;\n        })\n        .catch((error: AxiosError) => {\n            if(error.response!.status === 401){\n                return getRefresh();\n            }\n            alert(`${error.response!.status} ${error.response!.data}.`);\n            return undefined;\n        });\n}","import React from 'react';\nimport '../css/inputElementStyle.css';\nimport InputData from '../models/inputData';\n\nfunction NumberInput(props: InputData) {\n    let input: JSX.Element =<input type=\"number\" className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    if(props.min !== undefined && props.max === undefined){\n        input = <input type=\"number\" min={props.min} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }else if(props.min === undefined && props.max !== undefined){\n        input = <input type=\"number\" max={props.max} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }else if(props.min !== undefined && props.max !== undefined){\n        input = <input type=\"number\" max={props.max} min={props.min} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div>\n                    {input}\n                </div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip' htmlFor={props.fieldName}>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip' htmlFor={props.fieldName}>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default NumberInput;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/regression.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport { getImage } from '../apis/fileApi';\nimport ImagePlace from '../components/imagePlace';\nimport InputData from '../models/inputData';\nimport OutputData from '../models/outputData';\nimport StringOutput from '../components/stringOutput';\nimport StringInput from '../components/stringInput';\nimport { postRegression } from '../apis/taskApi';\nimport NumberInput from '../components/numberInput';\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\n\ninterface RegressionData {\n    image_name: string,\n    name_x: string | null,\n    name_y: string | null\n}\n\nfunction Regression() {\n    const navigate: NavigateFunction = useNavigate();\n    const [regerssionData, setRegressionData] = React.useState<RegressionData>({ image_name: \"\", name_x: null, name_y: null });\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [columnNameX, setColumnNameX] = React.useState<string | null>(null);\n    const [columnNameY, setColumnNameY] = React.useState<string | null>(null);\n    const [polynomialOrder, setPolynomialOrder] = React.useState<number>(1);\n    React.useEffect(() => {\n        if (regerssionData!.image_name === \"\") {\n            return;\n        }\n        const get_image = async () => {\n            const image = await getImage(regerssionData!.image_name);\n            if(image === null){\n                navigate('/login');\n            }\n            setImage(image)\n        }\n        get_image()\n    },\n    // eslint-disable-next-line\n        [regerssionData]\n    );\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        if(polynomialOrder <= 0){\n            alert('Степень полинома должна быть >=1');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n        const result: RegressionData | null | true = await postRegression(formData, polynomialOrder, columnNameX, columnNameY);\n        if(result === true){\n\n            handleSubmit(event);\n\n        }else if(result === null){\n\n            navigate('/login');\n\n        }else if(result !== undefined){\n            setRegressionData((oldData: Object) => ({ ...oldData, ...result }))\n        }\n        \n    }\n\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n\n    const handleColumnName = (event: any) => {\n        event.preventDefault()\n        if (event.target.name === 'column_name_x') {\n            setColumnNameX(event.target.value.trim())\n        } else {\n            setColumnNameY(event.target.value.trim())\n        }\n\n    }\n\n    const handlePolynomialOrder = (event: any) => {\n        event.preventDefault()\n        setPolynomialOrder(event.target.value);\n    }\n\n    const inputPolynomialOrder: InputData = {\n        mainLabel: 'Введите степень полинома',\n        fieldName: 'poly_order',\n        defaultValue: '1',\n        min: \"1\",\n        tipLabel: 'Степень полинома влияет на характер регрессии',\n        tipLabelLink: 'https://machinelearningmastery.ru/polynomial-regression-bbe8b9d97491/',\n        onChangeHandle: handlePolynomialOrder\n    };\n\n    const inputColumnNameX: InputData = {\n        mainLabel: 'Введите имя для столбца по оси X',\n        fieldName: 'column_name_x',\n        defaultValue: '',\n        tipLabel: 'Для недостающего столбца будет другой взят другой числовой столбец',\n        onChangeHandle: handleColumnName\n    };\n\n    const inputColumnNameY: InputData = {\n        mainLabel: 'Введите имя для столбца по оси Y',\n        fieldName: 'column_name_y',\n        defaultValue: '',\n        tipLabel: 'Для недостающего столбца будет другой взят другой числовой столбец',\n        onChangeHandle: handleColumnName\n    };\n\n    let outputColumnNameX: OutputData = {\n        mainLabel: 'Имя столбца по оси X',\n        defaultValue: 'Здесь будет имя столбца по оси X',\n        tipLabel: 'Если имя не было указано, то был выбран самый коррелирующий столбец',\n        value: null\n    }\n\n    let outputColumnNameY: OutputData = {\n        mainLabel: 'Имя столбца по оси Y',\n        defaultValue: 'Здесь будет имя столбца по оси Y',\n        tipLabel: 'Если имя не было указано, то был выбран самый коррелирующий столбец',\n        value: null\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Регрессия</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <NumberInput {...inputPolynomialOrder} />\n                            <StringInput {...inputColumnNameX} />\n                            <StringInput {...inputColumnNameY} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <StringOutput {...outputColumnNameX} {...{ value: regerssionData.name_x }} />\n                            <StringOutput {...outputColumnNameY} {...{ value: regerssionData.name_y }} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Regression;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/distribution.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport { getImage } from '../apis/fileApi';\nimport ImagePlace from '../components/imagePlace';\nimport { postDistribution } from '../apis/taskApi';\nimport InputData from '../models/inputData';\nimport StringInput from '../components/stringInput';\nimport OutputData from '../models/outputData';\nimport StringOutput from '../components/stringOutput';\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\n\ninterface DistributionData {\n    image_name: string,\n    name: string | null,\n    distribution_type: string | null\n}\n\nfunction Distribution() {\n    const navigate: NavigateFunction = useNavigate();\n    const [distributionData, setDistributionData] = React.useState<DistributionData>({ image_name: \"\", name: null, distribution_type: null });\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [columnName, setColumnName] = React.useState<string | null>(null);\n    React.useEffect(() => {\n        if (distributionData!.image_name === \"\") {\n            return;\n        }\n        const get_image = async () => {\n            const image = await getImage(distributionData!.image_name);\n            if(image === null){\n                navigate('/login');\n            }\n            setImage(image)\n        }\n        get_image()\n    },\n    // eslint-disable-next-line\n        [distributionData]\n    );\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n        const result: DistributionData | null | true = await postDistribution(formData, columnName);\n        if(result === true){\n\n            handleSubmit(event);\n\n        }else if(result === null){\n\n            navigate('/login');\n\n        }else if(result !== undefined){\n            setDistributionData((oldData: Object) => ({ ...oldData, ...result }))\n        }\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleColumnName = (event: any) => {\n        setColumnName(event.target.value.trim())\n    }\n\n    const inputColumnName: InputData = {\n        mainLabel: 'Введите имя столбца',\n        fieldName: 'column_name',\n        defaultValue: '',\n        tipLabel: 'Если данные содержат больше одного числового столбца будет распределение будет составляться по введённому столбцу',\n        onChangeHandle: handleColumnName\n    };\n\n    let outputColumnName: OutputData = {\n        mainLabel: 'Имя столбца',\n        defaultValue: 'Здесь будет имя столбца, по которому было распределение',\n        tipLabel: 'Без заданного имени столбца берётся первый числовой столбец',\n        value: null\n    }\n\n    let outputDistributionType: OutputData = {\n        mainLabel: 'Тип распределения',\n        defaultValue: 'Здесь будет тип самого подходящего распределения',\n        value: null\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Распределение</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <StringInput {...inputColumnName} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <StringOutput {...outputColumnName} {...{ value: distributionData.name }} />\n                            <StringOutput {...outputDistributionType} {...{ value: distributionData.distribution_type }} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Distribution;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/dataPreprocessing.css';\nimport '../css/button_default.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport { postPreprocessing } from '../apis/taskApi';\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\n\n\nfunction DataPreprocessing() {\n    const navigate: NavigateFunction = useNavigate();\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [filename, setFilename] = React.useState<string>('');\n    const [csvUrl, setCsvUrl] = React.useState<string>('');\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        const result: Blob | null | true = await postPreprocessing(formData);\n        if(result === true){\n\n            handleSubmit(event);\n\n        }else if(result === null){\n\n            navigate('/login');\n\n        }else if(result !== undefined){\n            let data: Blob = new Blob([result], {\n                type: 'text/csv'\n            });\n            setCsvUrl(window.URL.createObjectURL(data))\n        }\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            setFilename(event.target.files[0].name)\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Предварительная обработка данных</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <div className='mb-auto mt-auto'>\n                                {csvUrl === '' && <button type=\"submit\" className=\"btn button-default btn-download\" disabled>Кнопка для скачивания</button>}\n                                {csvUrl !== '' &&\n                                    <a href={csvUrl} download={'result_'+filename} className='download-link'>\n                                        <button type=\"submit\" className=\"btn button-default btn-download\">Скачать результат</button>\n                                    </a>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default DataPreprocessing;","import React from 'react';\nimport '../css/checkBox.css';\n\nexport interface CheckBoxData{\n    name: string;\n    onChangeHandle: any;\n    text: string;\n}\n\nexport function CheckBox(props: CheckBoxData) {\n    return (\n        <React.Fragment>\n            <div>\n                <label className=\"checkbox-box\">\n                    <div><input className=\"checkbox\" type=\"checkbox\" name={props.name} onChange={evt => props.onChangeHandle(evt)} /></div>\n                    <div className=\"checkbox-label\">{props.text}</div>\n                </label>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default CheckBox;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/clusterization.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport CheckBox, {CheckBoxData} from '../components/checkBox';\nimport ImagePlace from '../components/imagePlace';\nimport NumberInput from '../components/numberInput';\nimport InputData from '../models/inputData';\nimport StringOutput from '../components/stringOutput';\nimport OutputData from '../models/outputData';\nimport { getImage } from '../apis/fileApi';\nimport { postClusterization } from '../apis/taskApi';\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\n\ninterface ClusterizationData{\n    image_name: string,\n    clusters_centers: any | null,\n    clusters_labels: number[] | null,\n    columns_names: string[] | null\n}\n\nfunction Clusterization() {\n    const navigate: NavigateFunction = useNavigate();\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [withCenters, setWithCenters] = React.useState<boolean>(false);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [clustersNumber, setClustersNumber] = React.useState<number>(1);\n    const [clusterizationData, setClusterizationData] = React.useState<ClusterizationData>({\n        image_name: \"\", \n        clusters_centers: null, \n        clusters_labels:null, \n        columns_names:null\n    });\n\n    React.useEffect(() => {\n        if (clusterizationData!.image_name === \"\") {\n            return;\n        }\n\n        const get_image = async () => {\n            const image = await getImage(clusterizationData!.image_name);\n            if(image === null){\n                navigate('/login');\n            }\n            setImage(image)\n        }\n        get_image()\n    },\n    // eslint-disable-next-line\n        [clusterizationData]\n    );\n\n    const handleSubmit = async (event: any) =>{\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n        if(clustersNumber <= 0){\n            alert('Количество кластеров должно быть >=1');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n        const result: ClusterizationData | null | true = await postClusterization(formData, clustersNumber, withCenters);\n        if(result === true){\n\n            handleSubmit(event);\n\n        }else if(result === null){\n\n            navigate('/login');\n\n        }else if(result !== undefined){\n            setClusterizationData((oldData: Object) => ({ ...oldData, ...result }))\n        }\n\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleCenterCheckBox = (event: any) => {\n        event.preventDefault()\n        setWithCenters(wc=>!wc);\n    }\n\n    const handleClusterNumber = (event: any) => {\n        setClustersNumber(event.target.value);\n    }\n\n    const inputClusterNumber: InputData = {\n        mainLabel: 'Введите количество кластеров',\n        fieldName: 'clusters_num',\n        defaultValue: '1',\n        min: \"1\",\n        onChangeHandle: handleClusterNumber\n    };\n\n    let clustersCenterCheckBox: CheckBoxData = {\n        name:\"clusters_center\", \n        text:\"Рисовать центры кластеров\", \n        onChangeHandle:handleCenterCheckBox\n    };\n\n    let outputColumnsName: OutputData ={\n        mainLabel: 'Имена столбцов',\n        defaultValue: 'Здесь будут имена столбцов участвовавших в кластеризации',\n        tipLabel: 'Столбцы, которые не являются числовыми, игнорируются',\n        value: null\n    }\n\n    let outputClusters: OutputData ={\n        mainLabel: 'Кластеры',\n        defaultValue: 'Здесь будет массив кластеров',\n        tipLabel: 'Элемент массива - индекс кластера, к которому принадлежит элемент',\n        value: null\n    }\n\n    let outputClustersCenters: OutputData ={\n        mainLabel: 'Центры кластеров',\n        defaultValue: 'Здесь будут центры кластеров',\n        value: null\n    }\n\n    let clustersCenters: JSX.Element[] = [];\n    for(let center in clusterizationData.clusters_centers){\n        let v: string = \"\";\n        for(let index in clusterizationData.clusters_centers[center]){\n            v+=clusterizationData.clusters_centers[center][index].toFixed(4) + \" \"\n        }\n        clustersCenters.push(\n        <StringOutput {...{\n            mainLabel:`Центр кластерa ${center}`,\n            value: v,\n            defaultValue: '',\n        }}/>)\n    }\n\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Кластеризация</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <NumberInput {...inputClusterNumber} />\n                            <CheckBox {...clustersCenterCheckBox} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <StringOutput {...outputColumnsName} {...{value: clusterizationData.columns_names}} />\n                            <StringOutput {...outputClusters} {...{value: clusterizationData.clusters_labels}} />\n                            {clustersCenters.length === 0 && <StringOutput {...outputClustersCenters} {...{value: clusterizationData.clusters_centers}} />}\n                            {clustersCenters.length > 0 && clustersCenters }\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Clusterization;","import \"../css/matrix.css\";\n\nfunction MatrixComponent(props: any){\n    let values: JSX.Element[] = props.values.map((value: number)=><div className='matrix-cell'><div className='text'>{value}</div></div>);\n    let columnClass: string=\"matrix-column mt-1 \";\n    let value: number=2;\n    if(12/props.size > 2){\n        value=Math.floor(12/props.size);\n    }\n    columnClass=columnClass+`col-sm-${value} col-md-${value} col-lg-${value}`\n    return (\n        <>\n            <div className={columnClass}>\n                {values}\n            </div>\n        </>\n    );\n}\n\nexport default MatrixComponent;","import \"../css/matrix.css\";\nimport \"../css/result_default.css\";\nimport MatrixComponent from \"./matrixComponent\";\n\nfunction Matrix(props: any){\n    let values: JSX.Element[] = [];\n    for(let i: number=0; i < props.names.length;i++){\n        values.push(<MatrixComponent key={i} size={props.names.length} values={props.values.slice(i*props.names.length, (i+1)*props.names.length).map((value:number)=>value.toFixed(3))}/>)\n    }\n    let matrixClass='matrix-result result-default mt-1';\n    if(props.names.length === 0){\n        matrixClass+=' matrix-result-height';\n    }\n    return (\n        <div className = {matrixClass}>\n            {props.names.length > 0 &&\n                <div className=\"matrix row\">\n                    {values}\n                </div>\n            }\n            {props.names.length === 0 &&\n             <div className=\"matrix-replacement\"> Здесь будет матрица</div>\n            }\n        </div>\n    );\n}\n\nexport default Matrix;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/correlation.css';\nimport MethodPanel from '../components/methodPanel';\nimport Header from \"../components/header\";\nimport ImagePlace from '../components/imagePlace';\nimport Matrix from '../components/matrix';\nimport StringInput from '../components/stringInput';\nimport InputData from '../models/inputData';\nimport { getImage } from '../apis/fileApi';\nimport { postCorrelation } from '../apis/taskApi';\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\n\ninterface CorrelationData {\n    image_name: string,\n    names: string[],\n    values: number[]\n}\n\nfunction Correlation() {\n    const navigate: NavigateFunction = useNavigate();\n    const [correlationData, setCorrelationData] = React.useState<CorrelationData>({ image_name: \"\", names: [], values: [] });\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [colorMap, setColorMap] = React.useState<string | null>(null);\n    React.useEffect(() => {\n        if (correlationData!.image_name === \"\") {\n                return;\n        }\n        const get_image = async () => {\n            const image = await getImage(correlationData!.image_name);\n            if(image === null){\n                navigate('/login');\n            }\n            setImage(image)\n        }\n        get_image()\n    },\n    // eslint-disable-next-line\n        [correlationData]\n    );\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        const result: CorrelationData | null | true = await postCorrelation(formData, colorMap);\n        if(result === true){\n\n            handleSubmit(event);\n\n        }else if(result === null){\n\n            navigate('/login');\n\n        }else if(result !== undefined){\n            setCorrelationData((oldData: Object) => ({ ...oldData, ...result }))\n        }\n\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleColorMap = (event: any) => {\n        setColorMap(event.target.value.trim())\n    }\n\n    const inputColormap: InputData = {\n        mainLabel: 'Введите название colormap',\n        fieldName: 'color_map',\n        defaultValue: '',\n        tipLabel: 'Допустимые colormap',\n        tipLabelLink: 'https://matplotlib.org/stable/tutorials/colors/colormaps.html',\n        onChangeHandle: handleColorMap\n    };\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Корреляция</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <StringInput {...inputColormap} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <Matrix names={correlationData.names} values={correlationData.values} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Correlation;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/registration.css';\nimport HeaderCentral from \"../components/headerCentral\";\nimport { useNavigate, NavigateFunction } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { postAuth } from \"../apis/authApi\";\nimport { User } from \"../models/user\";\n\nfunction Registration() {\n    const navigate:NavigateFunction = useNavigate();\n    const [login, setLogin] = React.useState<string>('');\n    const [password, setPassword] = React.useState<string>('');\n    const [passwordCopy, setPasswordCopy] = React.useState<string>('');\n    const [isPressed, setPressed] =  React.useState<boolean>(false);\n    const [user, setUser] = React.useState<User>({ token: '', refresh_token:'' });\n    const [error, setError] = React.useState<string | null>(null);\n    React.useEffect(() => {\n        if(user.token === ''){\n            return;\n        }\n        localStorage.setItem('token', user.token);\n        localStorage.setItem('refresh_token', user.refresh_token);\n        navigate('/profile')\n\n    },\n    // eslint-disable-next-line\n        [user]\n    );\n\n    React.useEffect(() => {\n        if(error === null){\n            return;\n        }\n        alert(error)\n\n    },\n        [error]\n    );\n\n\n    function handleSubmit(event: any) {\n        event.preventDefault()\n        setError(null)\n        setPressed(true)\n        if(password !== passwordCopy){\n            alert('Пароли должны совпадать!')\n        }\n        if (login !== '' && password !== '') {\n            postAuth(setUser, setError, login, password)\n        }\n    };\n\n    function handleLogin(event: any){\n        event.preventDefault()\n        setLogin(event.target.value.trim())\n    }\n\n    function handlePassword(event: any){\n        event.preventDefault()\n        let value = event.target.value.trim()\n        if (event.target.name === 'password') {\n            setPassword(value)\n        } else {\n            setPasswordCopy(value)\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n                <section className=\"reg-form mb-3\">\n                    <div className=\"title\">\n                        <h1>Регистрация</h1>\n                    </div>\n                    <form className=\"mt-4\" method=\"post\">\n                        <div className=\"mb-4\">\n                            <div><label>Логин</label></div>\n                            <div><input type=\"text\" className=\"w-100\" name=\"login\" required onChange={evt => handleLogin(evt)} /></div>\n                            {(isPressed && login === '') && <div className=\"errors\">Заполните \"Логин\"</div>}\n                        </div>\n                        <div className=\"mb-4\">\n                            <div><label>Пароль</label></div>\n                            <div><input type=\"password\" className=\"w-100\" name=\"password\" required onChange={evt => handlePassword(evt)} /></div>\n                            {(isPressed && password === '') && <div className=\"errors\">Введите пароль</div>}\n                        </div>\n                        <div className=\"mb-4\">\n                            <div><label>Повторите пароль</label></div>\n                            <div><input type=\"password\" className=\"w-100\" name=\"password-copy\" required onChange={evt => setPasswordCopy(evt.target.value)} /></div>\n                            {(isPressed && password === '') && <div className=\"errors\">Повторите пароль</div>}\n                            {(password !== passwordCopy) && <div className=\"errors\">Пароли не совпадают</div>}\n                        </div>\n                        {error !== null &&\n                            <div className=\"mb-2 reg-tip\">\n                                <div className=\"errors\">Что-то пошло не так!</div>\n                            </div>\n                        }\n                        <div className=\"mb-4\">\n                            <button type=\"submit\" onClick={(event)=>handleSubmit(event)} className=\"btn button-default btn-reg\">Зарегистрироваться</button>\n                        </div>\n                    </form>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\n\n\nexport default  Registration;","import React from 'react';\nimport './css/App.css';\nimport { Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Login from './pages/login';\nimport Profile from './pages/profile';\nimport Footer from './components/footer';\n\nimport Regression from './pages/regression';\nimport Distribution from './pages/distribution';\nimport DataPreprocessing from './pages/dataPreprocessing';\nimport Clusterization from './pages/clusterization';\nimport Correlation from './pages/correlation';\nimport Registration from './pages/registration';\n\n\nfunction App() {\n\n  return (\n      <>\n        <Routes>\n          <Route path=\"/\" element={ <Home /> } />\n          <Route path=\"/profile\" element={ <Profile /> } />\n          <Route path=\"/login\" element={ <Login /> } />\n          <Route path=\"/registration\" element={ <Registration /> }/>\n          <Route path=\"/regression\" element={ <Regression />} />\n          <Route path=\"/distribution\" element={ <Distribution /> } />\n          <Route path=\"/data-preprocessing\" element={ <DataPreprocessing />} />\n          <Route path=\"/clusterization\" element={ <Clusterization/>} />\n          <Route path=\"/correlation\" element={ <Correlation /> }/>\n        </Routes>\n        <Footer />\n      </>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport './css/index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}