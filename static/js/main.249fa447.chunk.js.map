{"version":3,"sources":["components/header.tsx","components/methodPanel.tsx","authContext.tsx","globals.tsx","images/brain.png","components/imagePlace.tsx","components/clusterization.tsx","components/checkBox.tsx","components/numberInput.tsx","components/correlation.tsx","components/stringInput.tsx","components/matrixComponent.tsx","components/matrix.tsx","images sync /^/.//.*$","images/clusterization.png","images/correlation.png","images/data-preprocessing-cover.png","images/distributions.png","images/regression.png","data_operations.tsx","components/operationComponent.tsx","components/home.tsx","components/headerCentral.tsx","components/login.tsx","components/unloginButton.tsx","data_history.tsx","components/operationHistoryComponent.tsx","components/tableHistory.tsx","components/profile.tsx","components/footer.tsx","components/regression.tsx","components/distribution.tsx","components/dataPreprocessing.tsx","components/app.tsx","index.tsx"],"names":["Header","link","React","useContext","authContext","authenticated","className","to","main_page_link","src","logo","width","alt","site_name","MethodPanel","props","Fragment","htmlFor","type","id","onChange","evt","onClick","onSend","createContext","ImagePlace","image","Clusterization","useState","selectedFile","setSelectedFile","withCenters","setWithCenters","setImage","clustersNumber","setClustersNumber","image_name","clusters_centers","clusters_labels","clusterizationData","setClusterizationData","useEffect","console","log","Promise","resolve","reject","Axios","get","responseType","then","response","catch","e","result","base64ImageString","Buffer","from","data","toString","error","alert","status","inputClusterNumber","mainLabel","fieldName","defaultValue","min","onChangeHandle","event","target","value","clustersCenterCheckBox","name","text","preventDefault","wc","undefined","files","formData","FormData","append","post","params","clusters_num","headers","clustData","CheckBox","NumberInput","input","placeholder","max","tipLabel","tipLabelLink","href","Correlation","names","values","correlationData","setCorrelationData","colorMap","setColorMap","handleSubmit","colormap","corrData","inputColormap","StringInput","MatrixComponent","map","columnClass","size","Math","floor","Matrix","i","length","push","slice","toFixed","matrixClass","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","module","exports","operations","OperationComponent","page_link","require","img_name","default","description","Home","operationsComponents","op","HeaderCentral","Login","navigate","useNavigate","email","setEmail","password","setPassword","auth_context","method","required","setAuthenticated","UnLoginButton","operationsHistory","OperationHistoryComponent","scope","operation_name","input_file_name","output_file_name","TableHistory","operationsHistoryComponents","input_file_id","output_file_id","Profile","Footer","Regression","Distribution","DataPreprocessing","App","Provider","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.249fa447.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/header.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../images/brain.png';\nimport { main_page_link, site_name} from '../globals';\nimport { Link } from \"react-router-dom\";\nimport authContext from \"../authContext\";\n\nfunction Header (){\n    const isLogin = React.useContext(authContext);\n    let link: string = '/login';\n    if (isLogin!.authenticated) {\n        link = '/profile';\n    }\n    return (\n        <header>\n            <nav>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                        <div className=\"navbar-brand left ms-0 row\">\n                            <Link to={main_page_link()} className=\"col-md-4 col-lg-4\">\n                                <div className=\"logo\">\n                                    <img className=\"logo-image\"src={logo} width = {120} alt=\"logo\" />\n                                </div>\n                            </Link>\n                            <Link className=\"nav-link col-md-8 col-lg-8 logo-link\" to={main_page_link()}> {site_name()} </Link>\n                        </div>\n                        <div className=\"navbar-brand right me-0\">\n                            <Link className=\"nav-link\" to={link}> Профиль </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\n\nexport default Header;","import React from 'react';\nimport '../css/methodPanel.css';\nimport '../css/button_default.css';\n\nfunction MethodPanel(props: any){\n    return (\n        <React.Fragment>\n            <div className=\"load-send row\">\n                <form className=\"file-form col-md-12 col-lg-8 mb-1\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlFile1\">Загрузите <b>.csv</b> файл с вашими данными</label>\n                        <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\" onChange={evt=>props.onChange(evt)}/>\n                    </div>\n                </form>\n                <button type=\"submit\" onClick={evt=>props.onSend(evt)}className=\"btn button-default btn-send col-md-12 col-lg-4 ms-auto me-auto\">Выполнить</button>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default MethodPanel;","import { createContext } from \"react\";\n\nexport interface AuthContext{\n  authenticated: boolean,\n  setAuthenticated (auth: boolean): void\n}\n\nconst authContext = createContext<AuthContext| null>(null);\n\nexport default authContext;","export function main_page_link(){\n    return '/';\n}\n\nexport function site_name(){\n    return 'Cloud Machine Learning';\n}\n\nvar isLogin_: boolean = false;\n\nexport function isLogin(){\n    return isLogin_;\n}\n\nexport function setLogin(isLogin: boolean){\n    isLogin_ = isLogin;\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {main_page_link, site_name, isLogin, setLogin};\n","export default __webpack_public_path__ + \"static/media/brain.6c1dae5a.png\";","import React from 'react';\nimport \"../css/result_default.css\";\nimport '../css/imagePlace.css';\n\nexport function ImagePlace(props: any) {\n    return (\n        <React.Fragment>\n            <div className=\"image-result result-default\">\n                {props.image !== null && <img className=\"img-result\" src={props.image} alt=\"ImageResult\"/>}\n                {props.image == null && <div className=\"img-replacement\"> Здесь будет изображение</div>}\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default ImagePlace;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/clusterization.css';\nimport MethodPanel from './methodPanel';\nimport Header from \"./header\";\nimport CheckBox, {CheckBoxData} from './checkBox';\nimport ImagePlace from './imagePlace';\nimport NumberInput from './numberInput';\nimport InputData from '../inputData';\nimport Axios, {AxiosResponse } from 'axios';\n\ninterface ClusterizationData{\n    image_name: string,\n    clusters_centers: any,\n    clusters_labels: number[]\n}\n\nfunction Clusterization() {\n    const clusterizationPath: string = 'http://localhost:8080/clusterization';\n    const imagePath: string = 'http://localhost:8080/images';\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [withCenters, setWithCenters] = React.useState<boolean>(false);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [clustersNumber, setClustersNumber] = React.useState<number>(1);\n    // eslint-disable-next-line\n    const [clusterizationData, setClusterizationData] = React.useState<ClusterizationData>({image_name: \"\", clusters_centers: [], clusters_labels:[]});\n\n    React.useEffect(() => {\n        try {\n            if (clusterizationData!.image_name === \"\") {\n                return;\n            }\n            console.log(clusterizationData)\n            let promise = new Promise((resolve, reject) => {\n                Axios.get(`${imagePath}/${clusterizationData!.image_name}`,\n                    { responseType: 'arraybuffer' }\n                ).then\n                    (response => {\n                        resolve(response);\n                    })\n                    .catch((e: Error) => {\n                        reject(e);\n                    });;\n            });\n            promise\n                .then(\n                    result => {\n                        let base64ImageString: string = Buffer.from((result as AxiosResponse<any, any>).data, 'binary').toString('base64');\n                        let srcValue: string = \"data:image/png;base64,\" + base64ImageString;\n                        setImage(srcValue);\n                    },\n                    error => {\n                        alert(`${error.response.status} ${error.response.data}.`);\n                    }\n                );\n\n        } catch (error) {\n            console.log(error)\n        }\n    },\n        [clusterizationData]\n    );\n\n    const handleSubmit=(event: any) =>{\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n        if(clustersNumber <= 0){\n            alert('Количество кластеров должно быть >=1');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        try {\n            let promise = new Promise((resolve, reject) => {\n                Axios.post(clusterizationPath,\n                    formData,\n                    { params: { clusters_num: clustersNumber, clusters_centers:withCenters }, headers: { \"Content-Type\": \"multipart/form-data\" }, responseType: \"json\" }\n                ).then\n                    (response => {\n                        resolve(response);\n                    })\n                    .catch((e: Error) => {\n                        reject(e);\n                    });\n            });\n            promise\n                .then(\n                    result => {\n                        let data: ClusterizationData = (result as AxiosResponse<any, any>).data;\n                        setClusterizationData(clustData => ({ ...clustData, ...data }));\n                    },\n                    error => {\n                        alert(`${error.response.status} ${error.response.data}.`);\n                    }\n                );\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleCenterCheckBox = (event: any) => {\n        event.preventDefault()\n        setWithCenters(wc=>!wc);\n    }\n\n    const handleClusterNumber = (event: any) => {\n        setClustersNumber(event.target.value);\n    }\n\n    const inputClusterNumber: InputData = {\n        mainLabel: 'Введите количество кластеров',\n        fieldName: 'clusters_num',\n        defaultValue: '1',\n        min: \"1\",\n        onChangeHandle: handleClusterNumber\n    };\n\n    let clustersCenterCheckBox: CheckBoxData = {\n        name:\"clusters_center\", \n        text:\"Рисовать центры кластеров\", \n        onChangeHandle:handleCenterCheckBox\n    };\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Кластеризация</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <NumberInput {...inputClusterNumber} />\n                            <CheckBox {...clustersCenterCheckBox} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Clusterization;","import React from 'react';\nimport '../css/checkBox.css';\n\nexport interface CheckBoxData{\n    name: string;\n    onChangeHandle: any;\n    text: string;\n}\n\nexport function CheckBox(props: CheckBoxData) {\n    return (\n        <React.Fragment>\n            <div>\n                <label className=\"checkbox-box\">\n                    <div><input className=\"checkbox\" type=\"checkbox\" name={props.name} onChange={evt => props.onChangeHandle(evt)} /></div>\n                    <div className=\"checkbox-label\">{props.text}</div>\n                </label>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nexport default CheckBox;","import React from 'react';\nimport '../css/stringInput.css';\nimport InputData from '../inputData';\n\nfunction NumberInput(props: InputData) {\n    let input: JSX.Element =<input type=\"number\" className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    if(props.min !== undefined && props.max === undefined){\n        input = <input type=\"number\" min={props.min} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }else if(props.min === undefined && props.max !== undefined){\n        input = <input type=\"number\" max={props.max} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }else if(props.min !== undefined && props.max !== undefined){\n        input = <input type=\"number\" max={props.max} min={props.min} className=\"w-100 input-window\" name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/>;\n    }\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div>\n                    {input}\n                </div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip' htmlFor={props.fieldName}>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip' htmlFor={props.fieldName}>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default NumberInput;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/correlation.css';\nimport MethodPanel from './methodPanel';\nimport Header from \"./header\";\nimport Axios, { AxiosResponse } from 'axios';\nimport ImagePlace from './imagePlace';\nimport Matrix from './matrix';\nimport StringInput from './stringInput';\nimport InputData from '../inputData';\n\ninterface CorrelationData {\n    image_name: string,\n    names: string[],\n    values: number[]\n}\n\nfunction Correlation() {\n    const correlationPath: string = 'http://localhost:8080/correlation';\n    const imagePath: string = 'http://localhost:8080/images';\n    const [correlationData, setCorrelationData] = React.useState<CorrelationData>({ image_name: \"\", names: [], values: [] });\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n    const [image, setImage] = React.useState<null | any>(null);\n    const [colorMap, setColorMap] = React.useState<string | null>(null);\n    React.useEffect(() => {\n        try {\n            if (correlationData!.image_name === \"\") {\n                return;\n            }\n            console.log(correlationData)\n            let promise = new Promise((resolve, reject) => {\n                Axios.get(`${imagePath}/${correlationData!.image_name}`,\n                    { responseType: 'arraybuffer' }\n                ).then\n                    (response => {\n                        resolve(response);\n                    })\n                    .catch((e: Error) => {\n                        reject(e);\n                    });;\n            });\n            promise\n                .then(\n                    result => {\n                        let base64ImageString: string = Buffer.from((result as AxiosResponse<any, any>).data, 'binary').toString('base64');\n                        let srcValue: string = \"data:image/png;base64,\" + base64ImageString;\n                        setImage(srcValue);\n                    },\n                    error => {\n                        alert(`${error.response.status} ${error.response.data}.`);\n                    }\n                );\n\n        } catch (error) {\n            console.log(error)\n        }\n    },\n        [correlationData]\n    );\n\n    const handleSubmit = async (event: any) => {\n        event.preventDefault()\n        if (selectedFile == null) {\n            alert('Загрузите файл формата *.csv');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append(`${selectedFile.name}`, selectedFile);\n\n        try {\n            let promise = new Promise((resolve, reject) => {\n                Axios.post(correlationPath,\n                    formData,\n                    { params: { colormap: colorMap }, headers: { \"Content-Type\": \"multipart/form-data\" }, responseType: \"json\" }\n                ).then\n                    (response => {\n                        resolve(response);\n                    })\n                    .catch((e: Error) => {\n                        reject(e);\n                    });\n            });\n            promise\n                .then(\n                    result => {\n                        let data: CorrelationData = (result as AxiosResponse<any, any>).data;\n                        setCorrelationData(corrData => ({ ...corrData, ...data }));\n                    },\n                    error => {\n                        alert(`${error.response.status} ${error.response.data}.`);\n                    }\n                );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    const handleColorMap = (event: any) => {\n        setColorMap(event.target.value)\n    }\n\n    const inputColormap: InputData = {\n        mainLabel: 'Введите название colormap',\n        fieldName: 'color_map',\n        defaultValue: '',\n        tipLabel: 'Допустимые colormap',\n        tipLabelLink: 'https://matplotlib.org/stable/tutorials/colors/colormaps.html',\n        onChangeHandle: handleColorMap\n    };\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Корреляция</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                            <StringInput {...inputColormap} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                            <ImagePlace image={image} />\n                            <Matrix names={correlationData.names} values={correlationData.values} />\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Correlation;","import React from 'react';\nimport '../css/stringInput.css';\nimport InputData from '../inputData';\n\nfunction StringInput(props: InputData) {\n\n    return (\n        <React.Fragment>\n            <div>\n                <div><label>{props.mainLabel}</label></div>\n                <div><input type=\"text\" className=\"w-100 input-window\"  name={props.fieldName} placeholder={props.defaultValue} onChange={event=>props.onChangeHandle(event)}/></div>\n                {props.tipLabel !== undefined && \n                <div className='tip'>\n                    { props.tipLabelLink !== undefined &&\n                        < label className='tip' htmlFor={props.fieldName}>\n                            <a href={props.tipLabelLink} className='tip-link'>\n                            {props.tipLabel}\n                            </a>\n                        </label>\n                    }\n                    {props.tipLabelLink === undefined &&\n                        <label className='tip' htmlFor={props.fieldName}>\n                            {props.tipLabel}\n                        </label>\n                    }\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default StringInput;","import \"../css/matrix.css\";\n\nfunction MatrixComponent(props: any){\n    let values: JSX.Element[] = props.values.map((value: number)=><div className='matrix-cell'><div className='text'>{value}</div></div>);\n    let columnClass: string=\"matrix-column mt-1 \";\n    let value: number=2;\n    if(12/props.size > 2){\n        value=Math.floor(12/props.size);\n    }\n    columnClass=columnClass+`col-sm-${value} col-md-${value} col-lg-${value}`\n    return (\n        <>\n            <div className={columnClass}>\n                {values}\n            </div>\n        </>\n    );\n}\n\nexport default MatrixComponent;","import \"../css/matrix.css\";\nimport \"../css/result_default.css\";\nimport MatrixComponent from \"./matrixComponent\";\n\nfunction Matrix(props: any){\n    let values: JSX.Element[] = [];\n    for(let i: number=0; i < props.names.length;i++){\n        values.push(<MatrixComponent key={i} size={props.names.length} values={props.values.slice(i*props.names.length, (i+1)*props.names.length).map((value:number)=>value.toFixed(3))}/>)\n    }\n    let matrixClass='matrix-result result-default mt-1';\n    if(props.names.length === 0){\n        matrixClass+=' matrix-result-height';\n    }\n    return (\n        <div className = {matrixClass}>\n            {props.names.length > 0 &&\n                <div className=\"matrix row\">\n                    {values}\n                </div>\n            }\n            {props.names.length === 0 &&\n             <div className=\"matrix-replacement\"> Здесь будет матрица</div>\n            }\n        </div>\n    );\n}\n\nexport default Matrix;","var map = {\n\t\"./brain.png\": 30,\n\t\"./clusterization.png\": 76,\n\t\"./correlation.png\": 77,\n\t\"./data-preprocessing-cover.png\": 78,\n\t\"./distributions.png\": 79,\n\t\"./regression.png\": 80\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 75;","export default __webpack_public_path__ + \"static/media/clusterization.86ce360e.png\";","export default __webpack_public_path__ + \"static/media/correlation.b4dd3955.png\";","export default __webpack_public_path__ + \"static/media/data-preprocessing-cover.dc0dad88.png\";","export default __webpack_public_path__ + \"static/media/distributions.bcca2403.png\";","export default __webpack_public_path__ + \"static/media/regression.cfe9699e.png\";","import Operation from './operation';\n\nlet operations: Operation[] = [\n    {'id': 1,'page_link':'distribution', 'img_name': 'distributions.png','name': 'Распределение данных', 'description': 'Позволяет посмотреть на частотные распределения ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D0%B2%D0%B5%D1%80%D0%BE%D1%8F%D1%82%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9'},\n    {'id': 2, 'page_link':'regression','img_name': 'regression.png','name': 'Регрессия', 'description': 'Позволяет построить различные регрессии по вашим данным.', 'link':'https://ru.wikipedia.org/wiki/%D0%A0%D0%B5%D0%B3%D1%80%D0%B5%D1%81%D1%81%D0%B8%D1%8F_(%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0)'},\n    {'id': 3, 'page_link':'data-preprocessing','img_name': 'data-preprocessing-cover.png','name': 'Предварительная обработка данных', 'description': 'Позволяет провести предварительную обработку ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B5%D0%B4%D0%B2%D0%B0%D1%80%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F_%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85'},\n    {'id': 4, 'page_link':'clusterization','img_name': 'clusterization.png','name': 'Кластеризация', 'description': 'Позволяет выделить кластеры в ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9A%D0%BB%D0%B0%D1%81%D1%82%D0%B5%D1%80%D0%BD%D1%8B%D0%B9_%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7'},\n    {'id': 5, 'page_link':'correlation','img_name': 'correlation.png','name': 'Корреляция', 'description': 'Позволяет посмотреть на корреляцию ваших данных.', 'link':'https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D1%80%D1%80%D0%B5%D0%BB%D1%8F%D1%86%D0%B8%D1%8F'},\n]\n\nexport default operations;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Operation from '../operation';\nimport '../css/button_default.css';\nimport '../css/operation_component.css';\nimport { Link } from 'react-router-dom';\n\nfunction OperationComponent(props: Operation){\n    return (\n        <div className=\"col-md-6 col-lg-4 mb-3\">\n            <div className=\"product\">\n                <div>\n                    <div className=\"mb-3\">\n                        <Link  to={props.page_link}>\n                            <img src={require(`../images/${props.img_name}`).default} alt='Пример' />\n                        </Link>\n                    </div>\n                    <div className=\"product-title\">\n                        <a className=\"nav-link\" href={props.link}>\n                            <b>{props.name}</b>\n                        </a>\n                    </div>\n                    <br />\n                    <div>{props.description}</div>\n                </div>\n                <br />\n                <div className=\"mt-auto\">\n                    <Link className=\"btn button-default btn-try\" to={props.page_link} type=\"button\">Опробовать</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OperationComponent;","import React from 'react';\nimport '../css/home.css';\nimport operations from '../data_operations';\nimport Header from './header';\nimport OperationComponent from './operationComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Home() {\n    let operationsComponents: JSX.Element[] = operations.map(op => \n        <OperationComponent \n        key={op.id} \n        id={op.id} \n        img_name={op.img_name} \n        name={op.name} \n        description={op.description} \n        link={op.link}\n        page_link={op.page_link} \n    />);\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <section className=\"products-list row\">\n                    {operationsComponents}\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Home;","import React from \"react\";\nimport \"../css/header_central.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from '../images/brain.png';\nimport {main_page_link, site_name} from '../globals';\nimport { Link } from \"react-router-dom\";\n\nfunction HeaderCentral(){\n    return (\n        <header>\n            <nav>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                    <div className=\"navbar-brand row\">\n                            <Link to={main_page_link()} className=\"col-md-4 col-lg-4\">\n                                <div className=\"logo\">\n                                    <img className=\"logo-image\"src={logo} width = {150} alt=\"logo\" />\n                                </div>\n                            </Link>\n                            <Link className=\"nav-link col-md-8 col-lg-8 logo-link\" to={main_page_link()}> {site_name()} </Link>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\n\nexport default HeaderCentral;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/login.css';\nimport HeaderCentral from \"./headerCentral\";\nimport { useNavigate, NavigateFunction } from \"react-router-dom\";\nimport authContext from \"../authContext\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Login() {\n    const navigate:NavigateFunction = useNavigate();\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const auth_context = React.useContext(authContext);\n\n    function HandleMouseEvent(){\n        if(email !== '' && password !== ''){\n            navigate('/profile')\n            auth_context!.setAuthenticated(true);\n            console.log( auth_context!.authenticated);\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n                <section className=\"login-form mb-3\">\n                    <div className=\"title\">\n                        <h1>Авторизация</h1>\n                    </div>\n                    <form className=\"mt-4\" method=\"post\">\n                        <div className=\"mb-4\">\n                            <div><label>Email</label></div>\n                            <div><input type=\"email\" className=\"w-100\" name=\"email\" required onChange={evt => setEmail(evt.target.value)} /></div>\n                            <div className=\"errors\">Заполните \"Email\"</div>\n                        </div>\n                        <div className=\"mb-4\">\n                            <div><label>Пароль</label></div>\n                            <div><input type=\"password\" className=\"w-100\" name=\"password\" required onChange={evt => setPassword(evt.target.value)} /></div>\n                            <div className=\"errors\">Заполните \"Пароль\"</div>\n                        </div>\n                        <div className=\"mb-4\">\n                            <button type=\"submit\" onClick={()=>HandleMouseEvent()} className=\"btn button-default btn-login\">Войти</button>\n                        </div>\n                    </form>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\n\n\nexport default  Login;","import React from \"react\";\nimport '../css/button_default.css';\nimport '../css/unlogin.css';\nimport { useNavigate, NavigateFunction } from \"react-router-dom\";\nimport authContext from \"../authContext\";\n\nfunction UnLoginButton() {\n    const navigate:NavigateFunction = useNavigate();\n    const auth_context = React.useContext(authContext);\n\n    function HandleMouseEvent(){\n        navigate('/login');\n        auth_context!.setAuthenticated(false);\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"col-md-6 col-lg-4 mb-4\">\n                <button type=\"submit\" onClick = {() =>HandleMouseEvent()} className=\"btn button-default btn-unlogin\">Выйти</button>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default  UnLoginButton;","import OperationHistory from './operationHistory';\n\nlet operationsHistory: OperationHistory[] = [\n    {'id':1, 'operation_name': 'Построение регрессии','input_file_name':'input.csv','output_file_name':'output.png','input_file_id': 1, 'output_file_id': 2},\n    {'id':2, 'operation_name': 'Подготовка данных','input_file_name':'input.csv','output_file_name':'output.csv','input_file_id': 2, 'output_file_id': 3},\n    {'id':3, 'operation_name': 'Распределение данных','input_file_name':'input.csv','output_file_name':'output.png','input_file_id': 4, 'output_file_id': 5}\n\n]\n\nexport default operationsHistory;","import OperationHistory from \"../operationHistory\";\n\nfunction OperationHistoryComponent(props: OperationHistory){\n    return (\n    <tr>\n        <th scope=\"row\">{props.id}</th>\n        <td>{props.operation_name}</td>\n        <td>{props.input_file_name}</td>\n        <td>{props.output_file_name}</td>\n    </tr>\n    )\n}\n\nexport default OperationHistoryComponent;","import \"../css/table.css\";\nimport operationsHistory from \"../data_history\";\nimport OperationHistoryComponent from \"./operationHistoryComponent\";\n\nfunction TableHistory(){\n\n    let operationsHistoryComponents: JSX.Element[] = operationsHistory.map(value => \n        <OperationHistoryComponent \n        key={value.id} \n        id={value.id} \n        operation_name={value.operation_name} \n        input_file_name={value.input_file_name} \n        output_file_name={value.output_file_name} \n        input_file_id={value.input_file_id} \n        output_file_id={value.output_file_id}  \n    />);\n\n    return (\n        <table className=\"table table-striped mb-3 col-md-8 col-lg-12\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Действие</th>\n                    <th scope=\"col\">Исходные данные</th>\n                    <th scope=\"col\">Результат</th>\n                </tr>\n            </thead>\n            <tbody>\n                {operationsHistoryComponents}\n            </tbody>\n        </table>\n    );\n}\n\nexport default TableHistory;","import React from \"react\";\nimport '../css/profile.css';\nimport HeaderCentral from \"./headerCentral\";\nimport UnLoginButton from \"./unloginButton\";\nimport TableHistory from \"./tableHistory\";\n\nfunction Profile() {\n\n    return (\n        <React.Fragment>\n            <HeaderCentral />\n            <main className=\"container\">\n            <section className=\"profile-list\">\n                <div>\n                    <div className=\"profile-title mb-3\">\n                        Это ваш профиль\n                    </div>\n                </div>\n                <UnLoginButton />\n            </section>\n                <div>\n                    <div className=\"profile-title mb-3\">\n                        История действий\n                    </div>\n                    <TableHistory />\n                </div>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Profile;","import \"../css/footer.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"mt-auto\">\n            <div className=\"container\">\n                <div>\n                    &copy; V31R, 2022\n                    </div>\n                <div>\n                    <a className=\"link\" href=\"https://github.com/V31R\">GitHub</a>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\n\nexport default Footer;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/regression.css';\nimport MethodPanel from './methodPanel';\nimport Header from \"./header\";\n\n\nfunction Regression() {\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n\n    const handleSubmit=(event: any) =>{\n        console.log(selectedFile)\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Регрессия</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Regression;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/distribution.css';\nimport MethodPanel from './methodPanel';\nimport Header from \"./header\";\n\n\nfunction Distribution() {\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n\n    const handleSubmit=(event: any) =>{\n        console.log(selectedFile)\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Распределение</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default Distribution;","import React from 'react';\nimport '../css/operationTemplateComponent.css';\nimport '../css/dataPreprocessing.css';\nimport MethodPanel from './methodPanel';\nimport Header from \"./header\";\n\n\nfunction DataPreprocessing() {\n    const [selectedFile, setSelectedFile] = React.useState<null | any>(null);\n\n    const handleSubmit=(event: any) =>{\n        console.log(selectedFile)\n    }\n\n    const handleFileSelect = (event: any) => {\n        if (event.target.files[0] !== undefined) {\n            setSelectedFile(event.target.files[0]);\n            console.log(event.target.files[0], event.target.files[0].name);\n        } else {\n            setSelectedFile(null);\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <main className=\"container\">\n                <div className=\"template-section\">\n                    <div>\n                        <h2>Предварительная обработка данных</h2>\n                    </div>\n                </div>\n                <section className=\"functions-list row mt-2 mb-3\">\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Параметры\n                            </div>\n                            <MethodPanel onChange={handleFileSelect} onSend={handleSubmit} />\n                        </div>\n                    </div>\n                    <div className=\"col-md-12 col-lg-6 mt-1\">\n                        <div className=\"function\">\n                            <div className='template-title mb-1'>\n                                Результат\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default DataPreprocessing;","import React from 'react';\nimport '../css/App.css';\nimport { Routes, Route } from \"react-router-dom\";\nimport AuthContext from '../authContext'\nimport Home from \"./home\";\nimport Login from './login';\nimport Profile from './profile';\nimport Footer from './footer';\n\nimport Regression from './regression';\nimport Distribution from './distribution';\nimport DataPreprocessing from './dataPreprocessing';\nimport Clusterization from './clusterization';\nimport Correlation from './correlation';\n\n\nfunction App() {\n\n  const [authenticated, setAuthenticated] = React.useState<boolean>(false);\n\n  return (\n      <AuthContext.Provider value={{ authenticated, setAuthenticated }}>\n        \n        <Routes>\n          <Route path=\"/\" element={ <Home /> } />\n          <Route path=\"/profile\" element={ <Profile /> } />\n          <Route path=\"/login\" element={ <Login /> } />\n          <Route path=\"/regression\" element={ <Regression />} />\n          <Route path=\"/distribution\" element={ <Distribution /> } />\n          <Route path=\"/data-preprocessing\" element={ <DataPreprocessing />} />\n          <Route path=\"/clusterization\" element={ <Clusterization/>} />\n          <Route path=\"/correlation\" element={ <Correlation /> }/>\n        </Routes>\n        <Footer />\n      </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport './css/index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\nroot.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}